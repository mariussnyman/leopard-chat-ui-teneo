{"version":3,"sources":["webpack:///./node_modules/@sentry/types/esm/status.js","webpack:///./node_modules/@sentry/utils/esm/syncpromise.js","webpack:///./node_modules/@sentry/hub/esm/scope.js","webpack:///./node_modules/@sentry/hub/esm/hub.js","webpack:///./node_modules/@sentry/minimal/esm/index.js","webpack:///./node_modules/@sentry/utils/esm/polyfill.js","webpack:///./node_modules/@sentry/utils/esm/error.js","webpack:///./node_modules/@sentry/utils/esm/dsn.js","webpack:///./node_modules/@sentry/core/esm/api.js","webpack:///./node_modules/@sentry/core/esm/integration.js","webpack:///./node_modules/@sentry/core/esm/baseclient.js","webpack:///./node_modules/@sentry/core/esm/transports/noop.js","webpack:///./node_modules/@sentry/core/esm/basebackend.js","webpack:///./node_modules/@sentry/browser/esm/tracekit.js","webpack:///./node_modules/@sentry/browser/esm/parsers.js","webpack:///./node_modules/@sentry/browser/esm/eventbuilder.js","webpack:///./node_modules/@sentry/utils/esm/promisebuffer.js","webpack:///./node_modules/@sentry/core/esm/integrations/functiontostring.js","webpack:///./node_modules/@sentry/browser/esm/transports/base.js","webpack:///./node_modules/@sentry/browser/esm/transports/fetch.js","webpack:///./node_modules/@sentry/browser/esm/transports/xhr.js","webpack:///./node_modules/@sentry/browser/esm/backend.js","webpack:///./node_modules/@sentry/browser/esm/version.js","webpack:///./node_modules/@sentry/browser/esm/client.js","webpack:///./node_modules/@sentry/core/esm/integrations/inboundfilters.js","webpack:///./node_modules/@sentry/browser/esm/helpers.js","webpack:///./node_modules/@sentry/browser/esm/integrations/trycatch.js","webpack:///./node_modules/@sentry/utils/esm/instrument.js","webpack:///./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","webpack:///./node_modules/@sentry/browser/esm/integrations/globalhandlers.js","webpack:///./node_modules/@sentry/browser/esm/integrations/linkederrors.js","webpack:///./node_modules/@sentry/browser/esm/integrations/useragent.js","webpack:///./node_modules/@sentry/browser/esm/sdk.js","webpack:///./node_modules/@sentry/core/esm/sdk.js","webpack:///./node_modules/@sentry/browser/esm/index.js"],"names":["Status","fromHttpCode","code","Success","RateLimit","Invalid","Failed","Unknown","States","SyncPromise","executor","_this","this","_state","PENDING","_handlers","_resolve","value","_setResult","RESOLVED","_reject","reason","REJECTED","state","is","then","_value","_executeHandlers","_attachHandler","handler","concat","cachedHandlers","slice","forEach","done","onfulfilled","onrejected","e","prototype","toString","resolve","reject","_","all","collection","Array","isArray","length","counter","resolvedCollection","item","index","TypeError","result","catch","val","finally","onfinally","isRejected","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_context","addScopeListener","callback","push","addEventProcessor","_notifyScopeListeners","setTimeout","_notifyEventProcessors","processors","event","hint","processor","final","setUser","user","setTags","tags","setTag","key","_a","setExtras","extras","setExtra","extra","setFingerprint","fingerprint","_fingerprint","setLevel","level","_level","setTransaction","transaction","_transaction","_span","setContext","context","setSpan","span","getSpan","clone","scope","newScope","clear","addBreadcrumb","breadcrumb","maxBreadcrumbs","mergedBreadcrumb","timestamp","clearBreadcrumbs","_applyFingerprint","applyToEvent","Object","keys","contexts","trace","getTraceContext","breadcrumbs","getGlobalEventProcessors","global","__SENTRY__","globalEventProcessors","addGlobalEventProcessor","Hub","client","_version","_stack","_invokeClient","method","args","_i","arguments","top","getStackTop","apply","isOlderThan","version","bindClient","setupIntegrations","pushScope","stack","getStack","parentScope","getClient","popScope","pop","withScope","getScope","captureException","exception","eventId","_lastEventId","finalHint","syntheticException","Error","originalException","event_id","captureMessage","message","captureEvent","lastEventId","getOptions","_b","beforeBreadcrumb","_c","finalBreadcrumb","c","Math","min","name","configureScope","run","oldHub","makeMain","getIntegration","integration","_oO","logger","warn","id","startSpan","spanOrSpanContext","forceNoChild","_callExtensionMethod","traceHeaders","carrier","getMainCarrier","sentry","extensions","hub","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","hasHubOnCarrier","i","activeDomain","active","registryHubTopStack","_Oo","callOnHub","setPrototypeOf","__proto__","obj","proto","prop","hasOwnProperty","_super","SentryError","_newTarget","constructor","call","DSN_REGEX","Dsn","from","_fromString","_fromComponents","_validate","withPassword","host","path","pass","port","projectId","protocol","str","match","exec","split","join","components","component","isNaN","parseInt","API","dsn","_dsnObject","getDsn","getStoreEndpoint","_getBaseUrl","getStoreEndpointPath","getStoreEndpointWithUrlEncodedAuth","auth","sentry_key","sentry_version","getRequestHeaders","clientName","clientVersion","header","getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","encodeURIComponent","email","installedIntegrations","options","integrations","defaultIntegrations","userIntegrations","userIntegrationsNames_1","map","pickedIntegrationsNames_1","defaultIntegration","indexOf","userIntegration","integrationsNames","splice","setupOnce","log","BaseClient","backendClass","_integrations","_processing","_backend","_options","_dsn","_getBackend","eventFromException","_processEvent","finalEvent","error","eventFromMessage","flush","timeout","_isClientProcessing","status","clearInterval","interval","getTransport","close","transportFlushed","ready","enabled","_isEnabled","ticked","setInterval","_prepareEvent","environment","release","dist","maxValueLength","normalizeDepth","prepared","values","request","url","_addIntegrations","sdk","evt","_normalizeEvent","depth","b","data","sdkInfo","integrationsArray","beforeSend","sampleRate","random","__sentry__","sendEvent","beforeSendResult","_handleAsyncBeforeSend","processedEvent","NoopTransport","Skipped","BaseBackend","_transport","_setupTransport","_exception","_hint","_message","chrome","gecko","winjs","geckoEval","chromeEval","computeStackTrace","ex","popSize","framesToPop","stacktrace","parts","opera10Regex","opera11Regex","lines","line","element","func","column","extractMessage","popFrames","submatch","isNative","substr","columnNumber","failed","exceptionFromStacktrace","frames","prepareFramesForEvent","type","eventFromStacktrace","localStack","firstFrameFunction","lastFrameFunction","frame","colno","filename","function","in_app","lineno","reverse","eventFromUnknownInput","domException","name_1","eventFromString","rejection","__serialized__","frames_1","a","synthetic","input","attachStacktrace","originalFunctionToString","PromiseBuffer","_limit","_buffer","isReady","add","task","remove","drain","capturedSetTimeout","clearTimeout","BaseTransport","FetchTransport","_disabledUntil","Date","now","Promise","defaultOptions","body","JSON","stringify","referrerPolicy","supports","headers","fetch","response","get","XHRTransport","XMLHttpRequest","onreadystatechange","readyState","getResponseHeader","open","setRequestHeader","send","BrowserBackend","transportOptions","transport","handled","Info","SDK_NAME","SDK_VERSION","BrowserClient","platform","packages","showReportDialog","document","script","createElement","async","src","onLoad","onload","head","appendChild","FunctionToString","Function","__sentry_original__","DEFAULT_IGNORE_ERRORS","InboundFilters","self","clientOptions","_mergeOptions","_shouldDropEvent","_isSentryError","_isIgnoredError","_isBlacklistedUrl","_getEventFilterUrl","_isWhitelistedUrl","ignoreInternal","ignoreErrors","_getPossibleEventMessages","some","pattern","blacklistUrls","whitelistUrls","oO","frames_2","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","fn","before","__sentry_wrapped__","sentryWrapped","wrappedArguments","arg","handleEvent","mechanism","undefined","property","defineProperty","enumerable","defineProperties","getOwnPropertyDescriptor","configurable","lastHref","TryCatch","_ignoreOnError","_wrapTimeFunction","original","originalCallback","_wrapRAF","_wrapEventTarget","target","eventName","bind","err","_wrapXHR","originalSend","xhr","xmlHttpRequestProps","wrapOptions","handlers","instrumented","instrument","console","originalConsoleLevel","triggerHandlers","addEventListener","domEventHandler","keypressEventHandler","innerOriginal","xhrproto","originalOpen","__sentry_xhr__","toUpperCase","__sentry_own_request__","commonHandlerData","startTimestamp","status_code","endTimestamp","originalFetch","fetchData","getFetchMethod","getFetchUrl","oldOnPopState","onpopstate","to","location","href","history","historyReplacementFunction","originalHistoryFunction","String","_oldOnErrorHandler","onerror","msg","_oldOnUnhandledRejectionHandler","onunhandledrejection","addInstrumentationHandler","e_1","next","e_1_1","return","fetchArgs","Request","keypressTimeout","lastCapturedEvent","debounceTimer","debounce","tagName","isContentEditable","Breadcrumbs","dom","_consoleBreadcrumb","handlerData","category","fromString","_domBreadcrumb","h","_xhrBreadcrumb","addSentryBreadcrumb","_fetchBreadcrumb","filterUrl","_historyBreadcrumb","parsedLoc","parsedFrom","parsedTo","relative","serializedData","event_1","parse","GlobalHandlers","_onErrorHandlerInstalled","_onUnhandledRejectionHandlerInstalled","stackTraceLimit","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","currentHub","hasIntegration","isFailedOwnDelivery","_eventFromIncompleteOnError","_enhanceEventWithInitialFrame","detail","_eventFromIncompleteRejection","groups","g","LinkedErrors","_key","limit","_handler","linkedErrors","_walkErrorTree","UserAgent","navigator","userAgent","init","window_1","SENTRY_RELEASE","clientClass","debug","enable","forceLoad","windowIntegrations","_window","Sentry","Integrations","INTEGRATIONS"],"mappings":"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","file":"assets/js/chunk-2d0c94d9.f1c627d8.js","sourcesContent":["/** The status of an event. */\nexport var Status;\n(function (Status) {\n    /** The status could not be determined. */\n    Status[\"Unknown\"] = \"unknown\";\n    /** The event was skipped due to configuration or callbacks. */\n    Status[\"Skipped\"] = \"skipped\";\n    /** The event was sent to Sentry successfully. */\n    Status[\"Success\"] = \"success\";\n    /** The client is currently rate limited and will try again later. */\n    Status[\"RateLimit\"] = \"rate_limit\";\n    /** The event could not be processed. */\n    Status[\"Invalid\"] = \"invalid\";\n    /** A server-side error ocurred during submission. */\n    Status[\"Failed\"] = \"failed\";\n})(Status || (Status = {}));\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Status) {\n    /**\n     * Converts a HTTP status code into a {@link Status}.\n     *\n     * @param code The HTTP response status code.\n     * @returns The send status or {@link Status.Unknown}.\n     */\n    function fromHttpCode(code) {\n        if (code >= 200 && code < 300) {\n            return Status.Success;\n        }\n        if (code === 429) {\n            return Status.RateLimit;\n        }\n        if (code >= 400 && code < 500) {\n            return Status.Invalid;\n        }\n        if (code >= 500) {\n            return Status.Failed;\n        }\n        return Status.Unknown;\n    }\n    Status.fromHttpCode = fromHttpCode;\n})(Status || (Status = {}));\n//# sourceMappingURL=status.js.map","import { isThenable } from './is';\n/** SyncPromise internal states */\nvar States;\n(function (States) {\n    /** Pending */\n    States[\"PENDING\"] = \"PENDING\";\n    /** Resolved / OK */\n    States[\"RESOLVED\"] = \"RESOLVED\";\n    /** Rejected / Error */\n    States[\"REJECTED\"] = \"REJECTED\";\n})(States || (States = {}));\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nvar SyncPromise = /** @class */ (function () {\n    function SyncPromise(executor) {\n        var _this = this;\n        this._state = States.PENDING;\n        this._handlers = [];\n        /** JSDoc */\n        this._resolve = function (value) {\n            _this._setResult(States.RESOLVED, value);\n        };\n        /** JSDoc */\n        this._reject = function (reason) {\n            _this._setResult(States.REJECTED, reason);\n        };\n        /** JSDoc */\n        this._setResult = function (state, value) {\n            if (_this._state !== States.PENDING) {\n                return;\n            }\n            if (isThenable(value)) {\n                value.then(_this._resolve, _this._reject);\n                return;\n            }\n            _this._state = state;\n            _this._value = value;\n            _this._executeHandlers();\n        };\n        // TODO: FIXME\n        /** JSDoc */\n        this._attachHandler = function (handler) {\n            _this._handlers = _this._handlers.concat(handler);\n            _this._executeHandlers();\n        };\n        /** JSDoc */\n        this._executeHandlers = function () {\n            if (_this._state === States.PENDING) {\n                return;\n            }\n            var cachedHandlers = _this._handlers.slice();\n            _this._handlers = [];\n            cachedHandlers.forEach(function (handler) {\n                if (handler.done) {\n                    return;\n                }\n                if (_this._state === States.RESOLVED) {\n                    if (handler.onfulfilled) {\n                        handler.onfulfilled(_this._value);\n                    }\n                }\n                if (_this._state === States.REJECTED) {\n                    if (handler.onrejected) {\n                        handler.onrejected(_this._value);\n                    }\n                }\n                handler.done = true;\n            });\n        };\n        try {\n            executor(this._resolve, this._reject);\n        }\n        catch (e) {\n            this._reject(e);\n        }\n    }\n    /** JSDoc */\n    SyncPromise.prototype.toString = function () {\n        return '[object SyncPromise]';\n    };\n    /** JSDoc */\n    SyncPromise.resolve = function (value) {\n        return new SyncPromise(function (resolve) {\n            resolve(value);\n        });\n    };\n    /** JSDoc */\n    SyncPromise.reject = function (reason) {\n        return new SyncPromise(function (_, reject) {\n            reject(reason);\n        });\n    };\n    /** JSDoc */\n    SyncPromise.all = function (collection) {\n        return new SyncPromise(function (resolve, reject) {\n            if (!Array.isArray(collection)) {\n                reject(new TypeError(\"Promise.all requires an array as input.\"));\n                return;\n            }\n            if (collection.length === 0) {\n                resolve([]);\n                return;\n            }\n            var counter = collection.length;\n            var resolvedCollection = [];\n            collection.forEach(function (item, index) {\n                SyncPromise.resolve(item)\n                    .then(function (value) {\n                    resolvedCollection[index] = value;\n                    counter -= 1;\n                    if (counter !== 0) {\n                        return;\n                    }\n                    resolve(resolvedCollection);\n                })\n                    .then(null, reject);\n            });\n        });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.then = function (onfulfilled, onrejected) {\n        var _this = this;\n        return new SyncPromise(function (resolve, reject) {\n            _this._attachHandler({\n                done: false,\n                onfulfilled: function (result) {\n                    if (!onfulfilled) {\n                        // TODO: ¯\\_(ツ)_/¯\n                        // TODO: FIXME\n                        resolve(result);\n                        return;\n                    }\n                    try {\n                        resolve(onfulfilled(result));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n                onrejected: function (reason) {\n                    if (!onrejected) {\n                        reject(reason);\n                        return;\n                    }\n                    try {\n                        resolve(onrejected(reason));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n            });\n        });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.catch = function (onrejected) {\n        return this.then(function (val) { return val; }, onrejected);\n    };\n    /** JSDoc */\n    SyncPromise.prototype.finally = function (onfinally) {\n        var _this = this;\n        return new SyncPromise(function (resolve, reject) {\n            var val;\n            var isRejected;\n            return _this.then(function (value) {\n                isRejected = false;\n                val = value;\n                if (onfinally) {\n                    onfinally();\n                }\n            }, function (reason) {\n                isRejected = true;\n                val = reason;\n                if (onfinally) {\n                    onfinally();\n                }\n            }).then(function () {\n                if (isRejected) {\n                    reject(val);\n                    return;\n                }\n                resolve(val);\n            });\n        });\n    };\n    return SyncPromise;\n}());\nexport { SyncPromise };\n//# sourceMappingURL=syncpromise.js.map","import * as tslib_1 from \"tslib\";\nimport { getGlobalObject, isThenable, SyncPromise, timestampWithMs } from '@sentry/utils';\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nvar Scope = /** @class */ (function () {\n    function Scope() {\n        /** Flag if notifiying is happening. */\n        this._notifyingListeners = false;\n        /** Callback for client to receive scope changes. */\n        this._scopeListeners = [];\n        /** Callback list that will be called after {@link applyToEvent}. */\n        this._eventProcessors = [];\n        /** Array of breadcrumbs. */\n        this._breadcrumbs = [];\n        /** User */\n        this._user = {};\n        /** Tags */\n        this._tags = {};\n        /** Extra */\n        this._extra = {};\n        /** Contexts */\n        this._context = {};\n    }\n    /**\n     * Add internal on change listener. Used for sub SDKs that need to store the scope.\n     * @hidden\n     */\n    Scope.prototype.addScopeListener = function (callback) {\n        this._scopeListeners.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addEventProcessor = function (callback) {\n        this._eventProcessors.push(callback);\n        return this;\n    };\n    /**\n     * This will be called on every set call.\n     */\n    Scope.prototype._notifyScopeListeners = function () {\n        var _this = this;\n        if (!this._notifyingListeners) {\n            this._notifyingListeners = true;\n            setTimeout(function () {\n                _this._scopeListeners.forEach(function (callback) {\n                    callback(_this);\n                });\n                _this._notifyingListeners = false;\n            });\n        }\n    };\n    /**\n     * This will be called after {@link applyToEvent} is finished.\n     */\n    Scope.prototype._notifyEventProcessors = function (processors, event, hint, index) {\n        var _this = this;\n        if (index === void 0) { index = 0; }\n        return new SyncPromise(function (resolve, reject) {\n            var processor = processors[index];\n            // tslint:disable-next-line:strict-type-predicates\n            if (event === null || typeof processor !== 'function') {\n                resolve(event);\n            }\n            else {\n                var result = processor(tslib_1.__assign({}, event), hint);\n                if (isThenable(result)) {\n                    result\n                        .then(function (final) { return _this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve); })\n                        .then(null, reject);\n                }\n                else {\n                    _this._notifyEventProcessors(processors, result, hint, index + 1)\n                        .then(resolve)\n                        .then(null, reject);\n                }\n            }\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setUser = function (user) {\n        this._user = user || {};\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTags = function (tags) {\n        this._tags = tslib_1.__assign({}, this._tags, tags);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTag = function (key, value) {\n        var _a;\n        this._tags = tslib_1.__assign({}, this._tags, (_a = {}, _a[key] = value, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtras = function (extras) {\n        this._extra = tslib_1.__assign({}, this._extra, extras);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtra = function (key, extra) {\n        var _a;\n        this._extra = tslib_1.__assign({}, this._extra, (_a = {}, _a[key] = extra, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setFingerprint = function (fingerprint) {\n        this._fingerprint = fingerprint;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setLevel = function (level) {\n        this._level = level;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTransaction = function (transaction) {\n        this._transaction = transaction;\n        if (this._span) {\n            this._span.transaction = transaction;\n        }\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setContext = function (key, context) {\n        var _a;\n        this._context = tslib_1.__assign({}, this._context, (_a = {}, _a[key] = context, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSpan = function (span) {\n        this._span = span;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Internal getter for Span, used in Hub.\n     * @hidden\n     */\n    Scope.prototype.getSpan = function () {\n        return this._span;\n    };\n    /**\n     * Inherit values from the parent scope.\n     * @param scope to clone.\n     */\n    Scope.clone = function (scope) {\n        var newScope = new Scope();\n        if (scope) {\n            newScope._breadcrumbs = tslib_1.__spread(scope._breadcrumbs);\n            newScope._tags = tslib_1.__assign({}, scope._tags);\n            newScope._extra = tslib_1.__assign({}, scope._extra);\n            newScope._context = tslib_1.__assign({}, scope._context);\n            newScope._user = scope._user;\n            newScope._level = scope._level;\n            newScope._span = scope._span;\n            newScope._transaction = scope._transaction;\n            newScope._fingerprint = scope._fingerprint;\n            newScope._eventProcessors = tslib_1.__spread(scope._eventProcessors);\n        }\n        return newScope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clear = function () {\n        this._breadcrumbs = [];\n        this._tags = {};\n        this._extra = {};\n        this._user = {};\n        this._context = {};\n        this._level = undefined;\n        this._transaction = undefined;\n        this._fingerprint = undefined;\n        this._span = undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestampWithMs() }, breadcrumb);\n        this._breadcrumbs =\n            maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n                ? tslib_1.__spread(this._breadcrumbs, [mergedBreadcrumb]).slice(-maxBreadcrumbs)\n                : tslib_1.__spread(this._breadcrumbs, [mergedBreadcrumb]);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clearBreadcrumbs = function () {\n        this._breadcrumbs = [];\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Applies fingerprint from the scope to the event if there's one,\n     * uses message if there's one instead or get rid of empty fingerprint\n     */\n    Scope.prototype._applyFingerprint = function (event) {\n        // Make sure it's an array first and we actually have something in place\n        event.fingerprint = event.fingerprint\n            ? Array.isArray(event.fingerprint)\n                ? event.fingerprint\n                : [event.fingerprint]\n            : [];\n        // If we have something on the scope, then merge it with event\n        if (this._fingerprint) {\n            event.fingerprint = event.fingerprint.concat(this._fingerprint);\n        }\n        // If we have no data at all, remove empty array default\n        if (event.fingerprint && !event.fingerprint.length) {\n            delete event.fingerprint;\n        }\n    };\n    /**\n     * Applies the current context and fingerprint to the event.\n     * Note that breadcrumbs will be added by the client.\n     * Also if the event has already breadcrumbs on it, we do not merge them.\n     * @param event Event\n     * @param hint May contain additional informartion about the original exception.\n     * @hidden\n     */\n    Scope.prototype.applyToEvent = function (event, hint) {\n        if (this._extra && Object.keys(this._extra).length) {\n            event.extra = tslib_1.__assign({}, this._extra, event.extra);\n        }\n        if (this._tags && Object.keys(this._tags).length) {\n            event.tags = tslib_1.__assign({}, this._tags, event.tags);\n        }\n        if (this._user && Object.keys(this._user).length) {\n            event.user = tslib_1.__assign({}, this._user, event.user);\n        }\n        if (this._context && Object.keys(this._context).length) {\n            event.contexts = tslib_1.__assign({}, this._context, event.contexts);\n        }\n        if (this._level) {\n            event.level = this._level;\n        }\n        if (this._transaction) {\n            event.transaction = this._transaction;\n        }\n        if (this._span) {\n            event.contexts = tslib_1.__assign({ trace: this._span.getTraceContext() }, event.contexts);\n        }\n        this._applyFingerprint(event);\n        event.breadcrumbs = tslib_1.__spread((event.breadcrumbs || []), this._breadcrumbs);\n        event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n        return this._notifyEventProcessors(tslib_1.__spread(getGlobalEventProcessors(), this._eventProcessors), event, hint);\n    };\n    return Scope;\n}());\nexport { Scope };\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n    var global = getGlobalObject();\n    global.__SENTRY__ = global.__SENTRY__ || {};\n    global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n    return global.__SENTRY__.globalEventProcessors;\n}\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback) {\n    getGlobalEventProcessors().push(callback);\n}\n//# sourceMappingURL=scope.js.map","import * as tslib_1 from \"tslib\";\nimport { consoleSandbox, getGlobalObject, isNodeEnv, logger, timestampWithMs, uuid4 } from '@sentry/utils';\nimport { Scope } from './scope';\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n *\n * @hidden\n */\nexport var API_VERSION = 3;\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 100;\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n/**\n * @inheritDoc\n */\nvar Hub = /** @class */ (function () {\n    /**\n     * Creates a new instance of the hub, will push one {@link Layer} into the\n     * internal stack on creation.\n     *\n     * @param client bound to the hub.\n     * @param scope bound to the hub.\n     * @param version number, higher number means higher priority.\n     */\n    function Hub(client, scope, _version) {\n        if (scope === void 0) { scope = new Scope(); }\n        if (_version === void 0) { _version = API_VERSION; }\n        this._version = _version;\n        /** Is a {@link Layer}[] containing the client and scope */\n        this._stack = [];\n        this._stack.push({ client: client, scope: scope });\n    }\n    /**\n     * Internal helper function to call a method on the top client if it exists.\n     *\n     * @param method The method to call on the client.\n     * @param args Arguments to pass to the client function.\n     */\n    Hub.prototype._invokeClient = function (method) {\n        var _a;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var top = this.getStackTop();\n        if (top && top.client && top.client[method]) {\n            (_a = top.client)[method].apply(_a, tslib_1.__spread(args, [top.scope]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.isOlderThan = function (version) {\n        return this._version < version;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.bindClient = function (client) {\n        var top = this.getStackTop();\n        top.client = client;\n        if (client && client.setupIntegrations) {\n            client.setupIntegrations();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.pushScope = function () {\n        // We want to clone the content of prev scope\n        var stack = this.getStack();\n        var parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n        var scope = Scope.clone(parentScope);\n        this.getStack().push({\n            client: this.getClient(),\n            scope: scope,\n        });\n        return scope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.popScope = function () {\n        return this.getStack().pop() !== undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.withScope = function (callback) {\n        var scope = this.pushScope();\n        try {\n            callback(scope);\n        }\n        finally {\n            this.popScope();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getClient = function () {\n        return this.getStackTop().client;\n    };\n    /** Returns the scope of the top stack. */\n    Hub.prototype.getScope = function () {\n        return this.getStackTop().scope;\n    };\n    /** Returns the scope stack for domains or the process. */\n    Hub.prototype.getStack = function () {\n        return this._stack;\n    };\n    /** Returns the topmost scope layer in the order domain > local > process. */\n    Hub.prototype.getStackTop = function () {\n        return this._stack[this._stack.length - 1];\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureException = function (exception, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        var finalHint = hint;\n        // If there's no explicit hint provided, mimick the same thing that would happen\n        // in the minimal itself to create a consistent behavior.\n        // We don't do this in the client, as it's the lowest level API, and doing this,\n        // would prevent user from having full control over direct calls.\n        if (!hint) {\n            var syntheticException = void 0;\n            try {\n                throw new Error('Sentry syntheticException');\n            }\n            catch (exception) {\n                syntheticException = exception;\n            }\n            finalHint = {\n                originalException: exception,\n                syntheticException: syntheticException,\n            };\n        }\n        this._invokeClient('captureException', exception, tslib_1.__assign({}, finalHint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureMessage = function (message, level, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        var finalHint = hint;\n        // If there's no explicit hint provided, mimick the same thing that would happen\n        // in the minimal itself to create a consistent behavior.\n        // We don't do this in the client, as it's the lowest level API, and doing this,\n        // would prevent user from having full control over direct calls.\n        if (!hint) {\n            var syntheticException = void 0;\n            try {\n                throw new Error(message);\n            }\n            catch (exception) {\n                syntheticException = exception;\n            }\n            finalHint = {\n                originalException: message,\n                syntheticException: syntheticException,\n            };\n        }\n        this._invokeClient('captureMessage', message, level, tslib_1.__assign({}, finalHint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureEvent = function (event, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        this._invokeClient('captureEvent', event, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.lastEventId = function () {\n        return this._lastEventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n        var top = this.getStackTop();\n        if (!top.scope || !top.client) {\n            return;\n        }\n        var _a = (top.client.getOptions && top.client.getOptions()) || {}, _b = _a.beforeBreadcrumb, beforeBreadcrumb = _b === void 0 ? null : _b, _c = _a.maxBreadcrumbs, maxBreadcrumbs = _c === void 0 ? DEFAULT_BREADCRUMBS : _c;\n        if (maxBreadcrumbs <= 0) {\n            return;\n        }\n        var timestamp = timestampWithMs();\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestamp }, breadcrumb);\n        var finalBreadcrumb = beforeBreadcrumb\n            ? consoleSandbox(function () { return beforeBreadcrumb(mergedBreadcrumb, hint); })\n            : mergedBreadcrumb;\n        if (finalBreadcrumb === null) {\n            return;\n        }\n        top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setUser = function (user) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setUser(user);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTags = function (tags) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setTags(tags);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtras = function (extras) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setExtras(extras);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTag = function (key, value) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setTag(key, value);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtra = function (key, extra) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setExtra(key, extra);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setContext = function (name, context) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setContext(name, context);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.configureScope = function (callback) {\n        var top = this.getStackTop();\n        if (top.scope && top.client) {\n            callback(top.scope);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.run = function (callback) {\n        var oldHub = makeMain(this);\n        try {\n            callback(this);\n        }\n        finally {\n            makeMain(oldHub);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getIntegration = function (integration) {\n        var client = this.getClient();\n        if (!client) {\n            return null;\n        }\n        try {\n            return client.getIntegration(integration);\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.startSpan = function (spanOrSpanContext, forceNoChild) {\n        if (forceNoChild === void 0) { forceNoChild = false; }\n        return this._callExtensionMethod('startSpan', spanOrSpanContext, forceNoChild);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.traceHeaders = function () {\n        return this._callExtensionMethod('traceHeaders');\n    };\n    /**\n     * Calls global extension method and binding current instance to the function call\n     */\n    // @ts-ignore\n    Hub.prototype._callExtensionMethod = function (method) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var carrier = getMainCarrier();\n        var sentry = carrier.__SENTRY__;\n        // tslint:disable-next-line: strict-type-predicates\n        if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n            return sentry.extensions[method].apply(this, args);\n        }\n        logger.warn(\"Extension method \" + method + \" couldn't be found, doing nothing.\");\n    };\n    return Hub;\n}());\nexport { Hub };\n/** Returns the global shim registry. */\nexport function getMainCarrier() {\n    var carrier = getGlobalObject();\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {\n        extensions: {},\n        hub: undefined,\n    };\n    return carrier;\n}\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub) {\n    var registry = getMainCarrier();\n    var oldHub = getHubFromCarrier(registry);\n    setHubOnCarrier(registry, hub);\n    return oldHub;\n}\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub() {\n    // Get main carrier (global for every environment)\n    var registry = getMainCarrier();\n    // If there's no hub, or its an old API, assign a new one\n    if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n        setHubOnCarrier(registry, new Hub());\n    }\n    // Prefer domains over global if they are there (applicable only to Node environment)\n    if (isNodeEnv()) {\n        return getHubFromActiveDomain(registry);\n    }\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n}\n/**\n * Try to read the hub from an active domain, fallback to the registry if one doesnt exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n    try {\n        var property = 'domain';\n        var carrier = getMainCarrier();\n        var sentry = carrier.__SENTRY__;\n        // tslint:disable-next-line: strict-type-predicates\n        if (!sentry || !sentry.extensions || !sentry.extensions[property]) {\n            return getHubFromCarrier(registry);\n        }\n        var domain = sentry.extensions[property];\n        var activeDomain = domain.active;\n        // If there no active domain, just return global hub\n        if (!activeDomain) {\n            return getHubFromCarrier(registry);\n        }\n        // If there's no hub on current domain, or its an old API, assign a new one\n        if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n            var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n            setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n        }\n        // Return hub that lives on a domain\n        return getHubFromCarrier(activeDomain);\n    }\n    catch (_Oo) {\n        // Return hub that lives on a global object\n        return getHubFromCarrier(registry);\n    }\n}\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return true;\n    }\n    return false;\n}\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return carrier.__SENTRY__.hub;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = new Hub();\n    return carrier.__SENTRY__.hub;\n}\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nexport function setHubOnCarrier(carrier, hub) {\n    if (!carrier) {\n        return false;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = hub;\n    return true;\n}\n//# sourceMappingURL=hub.js.map","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/hub';\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\nfunction callOnHub(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var hub = getCurrentHub();\n    if (hub && hub[method]) {\n        // tslint:disable-next-line:no-unsafe-any\n        return hub[method].apply(hub, tslib_1.__spread(args));\n    }\n    throw new Error(\"No hub defined or \" + method + \" was not found on the hub, please open a bug report.\");\n}\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\nexport function captureException(exception) {\n    var syntheticException;\n    try {\n        throw new Error('Sentry syntheticException');\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureException', exception, {\n        originalException: exception,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param level Define the level of the message.\n * @returns The generated eventId.\n */\nexport function captureMessage(message, level) {\n    var syntheticException;\n    try {\n        throw new Error(message);\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureMessage', message, level, {\n        originalException: message,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nexport function captureEvent(event) {\n    return callOnHub('captureEvent', event);\n}\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nexport function configureScope(callback) {\n    callOnHub('configureScope', callback);\n}\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nexport function addBreadcrumb(breadcrumb) {\n    callOnHub('addBreadcrumb', breadcrumb);\n}\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normailzed.\n */\nexport function setContext(name, context) {\n    callOnHub('setContext', name, context);\n}\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras) {\n    callOnHub('setExtras', extras);\n}\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags) {\n    callOnHub('setTags', tags);\n}\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normailzed.\n */\nexport function setExtra(key, extra) {\n    callOnHub('setExtra', key, extra);\n}\n/**\n * Set key:value that will be sent as tags data with the event.\n * @param key String key of tag\n * @param value String value of tag\n */\nexport function setTag(key, value) {\n    callOnHub('setTag', key, value);\n}\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user) {\n    callOnHub('setUser', user);\n}\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nexport function withScope(callback) {\n    callOnHub('withScope', callback);\n}\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n * @hidden\n */\nexport function _callOnClient(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    callOnHub.apply(void 0, tslib_1.__spread(['_invokeClient', method], args));\n}\n//# sourceMappingURL=index.js.map","export var setPrototypeOf = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties); // tslint:disable-line:no-unbound-method\n/**\n * setPrototypeOf polyfill using __proto__\n */\nfunction setProtoOf(obj, proto) {\n    // @ts-ignore\n    obj.__proto__ = proto;\n    return obj;\n}\n/**\n * setPrototypeOf polyfill using mixin\n */\nfunction mixinProperties(obj, proto) {\n    for (var prop in proto) {\n        if (!obj.hasOwnProperty(prop)) {\n            // @ts-ignore\n            obj[prop] = proto[prop];\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=polyfill.js.map","import * as tslib_1 from \"tslib\";\nimport { setPrototypeOf } from './polyfill';\n/** An error emitted by Sentry SDKs and related utilities. */\nvar SentryError = /** @class */ (function (_super) {\n    tslib_1.__extends(SentryError, _super);\n    function SentryError(message) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        // tslint:disable:no-unsafe-any\n        _this.name = _newTarget.prototype.constructor.name;\n        setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return SentryError;\n}(Error));\nexport { SentryError };\n//# sourceMappingURL=error.js.map","import * as tslib_1 from \"tslib\";\nimport { SentryError } from './error';\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w\\.-]+)(?::(\\d+))?\\/(.+)/;\n/** Error message */\nvar ERROR_MESSAGE = 'Invalid Dsn';\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nvar Dsn = /** @class */ (function () {\n    /** Creates a new Dsn component */\n    function Dsn(from) {\n        if (typeof from === 'string') {\n            this._fromString(from);\n        }\n        else {\n            this._fromComponents(from);\n        }\n        this._validate();\n    }\n    /**\n     * Renders the string representation of this Dsn.\n     *\n     * By default, this will render the public representation without the password\n     * component. To get the deprecated private representation, set `withPassword`\n     * to true.\n     *\n     * @param withPassword When set to true, the password will be included.\n     */\n    Dsn.prototype.toString = function (withPassword) {\n        if (withPassword === void 0) { withPassword = false; }\n        // tslint:disable-next-line:no-this-assignment\n        var _a = this, host = _a.host, path = _a.path, pass = _a.pass, port = _a.port, projectId = _a.projectId, protocol = _a.protocol, user = _a.user;\n        return (protocol + \"://\" + user + (withPassword && pass ? \":\" + pass : '') +\n            (\"@\" + host + (port ? \":\" + port : '') + \"/\" + (path ? path + \"/\" : path) + projectId));\n    };\n    /** Parses a string into this Dsn. */\n    Dsn.prototype._fromString = function (str) {\n        var match = DSN_REGEX.exec(str);\n        if (!match) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        var _a = tslib_1.__read(match.slice(1), 6), protocol = _a[0], user = _a[1], _b = _a[2], pass = _b === void 0 ? '' : _b, host = _a[3], _c = _a[4], port = _c === void 0 ? '' : _c, lastPath = _a[5];\n        var path = '';\n        var projectId = lastPath;\n        var split = projectId.split('/');\n        if (split.length > 1) {\n            path = split.slice(0, -1).join('/');\n            projectId = split.pop();\n        }\n        this._fromComponents({ host: host, pass: pass, path: path, projectId: projectId, port: port, protocol: protocol, user: user });\n    };\n    /** Maps Dsn components into this instance. */\n    Dsn.prototype._fromComponents = function (components) {\n        this.protocol = components.protocol;\n        this.user = components.user;\n        this.pass = components.pass || '';\n        this.host = components.host;\n        this.port = components.port || '';\n        this.path = components.path || '';\n        this.projectId = components.projectId;\n    };\n    /** Validates this Dsn and throws on error. */\n    Dsn.prototype._validate = function () {\n        var _this = this;\n        ['protocol', 'user', 'host', 'projectId'].forEach(function (component) {\n            if (!_this[component]) {\n                throw new SentryError(ERROR_MESSAGE);\n            }\n        });\n        if (this.protocol !== 'http' && this.protocol !== 'https') {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        if (this.port && isNaN(parseInt(this.port, 10))) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n    };\n    return Dsn;\n}());\nexport { Dsn };\n//# sourceMappingURL=dsn.js.map","import { Dsn, urlEncode } from '@sentry/utils';\nvar SENTRY_API_VERSION = '7';\n/** Helper class to provide urls to different Sentry endpoints. */\nvar API = /** @class */ (function () {\n    /** Create a new instance of API */\n    function API(dsn) {\n        this.dsn = dsn;\n        this._dsnObject = new Dsn(dsn);\n    }\n    /** Returns the Dsn object. */\n    API.prototype.getDsn = function () {\n        return this._dsnObject;\n    };\n    /** Returns a string with auth headers in the url to the store endpoint. */\n    API.prototype.getStoreEndpoint = function () {\n        return \"\" + this._getBaseUrl() + this.getStoreEndpointPath();\n    };\n    /** Returns the store endpoint with auth added in url encoded. */\n    API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n        var dsn = this._dsnObject;\n        var auth = {\n            sentry_key: dsn.user,\n            sentry_version: SENTRY_API_VERSION,\n        };\n        // Auth is intentionally sent as part of query string (NOT as custom HTTP header)\n        // to avoid preflight CORS requests\n        return this.getStoreEndpoint() + \"?\" + urlEncode(auth);\n    };\n    /** Returns the base path of the url including the port. */\n    API.prototype._getBaseUrl = function () {\n        var dsn = this._dsnObject;\n        var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n        var port = dsn.port ? \":\" + dsn.port : '';\n        return protocol + \"//\" + dsn.host + port;\n    };\n    /** Returns only the path component for the store endpoint. */\n    API.prototype.getStoreEndpointPath = function () {\n        var dsn = this._dsnObject;\n        return (dsn.path ? \"/\" + dsn.path : '') + \"/api/\" + dsn.projectId + \"/store/\";\n    };\n    /** Returns an object that can be used in request headers. */\n    API.prototype.getRequestHeaders = function (clientName, clientVersion) {\n        var dsn = this._dsnObject;\n        var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n        header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n        header.push(\"sentry_key=\" + dsn.user);\n        if (dsn.pass) {\n            header.push(\"sentry_secret=\" + dsn.pass);\n        }\n        return {\n            'Content-Type': 'application/json',\n            'X-Sentry-Auth': header.join(', '),\n        };\n    };\n    /** Returns the url to the report dialog endpoint. */\n    API.prototype.getReportDialogEndpoint = function (dialogOptions) {\n        if (dialogOptions === void 0) { dialogOptions = {}; }\n        var dsn = this._dsnObject;\n        var endpoint = \"\" + this._getBaseUrl() + (dsn.path ? \"/\" + dsn.path : '') + \"/api/embed/error-page/\";\n        var encodedOptions = [];\n        encodedOptions.push(\"dsn=\" + dsn.toString());\n        for (var key in dialogOptions) {\n            if (key === 'user') {\n                if (!dialogOptions.user) {\n                    continue;\n                }\n                if (dialogOptions.user.name) {\n                    encodedOptions.push(\"name=\" + encodeURIComponent(dialogOptions.user.name));\n                }\n                if (dialogOptions.user.email) {\n                    encodedOptions.push(\"email=\" + encodeURIComponent(dialogOptions.user.email));\n                }\n            }\n            else {\n                encodedOptions.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]));\n            }\n        }\n        if (encodedOptions.length) {\n            return endpoint + \"?\" + encodedOptions.join('&');\n        }\n        return endpoint;\n    };\n    return API;\n}());\nexport { API };\n//# sourceMappingURL=api.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\nexport var installedIntegrations = [];\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options) {\n    var defaultIntegrations = (options.defaultIntegrations && tslib_1.__spread(options.defaultIntegrations)) || [];\n    var userIntegrations = options.integrations;\n    var integrations = [];\n    if (Array.isArray(userIntegrations)) {\n        var userIntegrationsNames_1 = userIntegrations.map(function (i) { return i.name; });\n        var pickedIntegrationsNames_1 = [];\n        // Leave only unique default integrations, that were not overridden with provided user integrations\n        defaultIntegrations.forEach(function (defaultIntegration) {\n            if (userIntegrationsNames_1.indexOf(defaultIntegration.name) === -1 &&\n                pickedIntegrationsNames_1.indexOf(defaultIntegration.name) === -1) {\n                integrations.push(defaultIntegration);\n                pickedIntegrationsNames_1.push(defaultIntegration.name);\n            }\n        });\n        // Don't add same user integration twice\n        userIntegrations.forEach(function (userIntegration) {\n            if (pickedIntegrationsNames_1.indexOf(userIntegration.name) === -1) {\n                integrations.push(userIntegration);\n                pickedIntegrationsNames_1.push(userIntegration.name);\n            }\n        });\n    }\n    else if (typeof userIntegrations === 'function') {\n        integrations = userIntegrations(defaultIntegrations);\n        integrations = Array.isArray(integrations) ? integrations : [integrations];\n    }\n    else {\n        integrations = tslib_1.__spread(defaultIntegrations);\n    }\n    // Make sure that if present, `Debug` integration will always run last\n    var integrationsNames = integrations.map(function (i) { return i.name; });\n    var alwaysLastToRun = 'Debug';\n    if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n        integrations.push.apply(integrations, tslib_1.__spread(integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1)));\n    }\n    return integrations;\n}\n/** Setup given integration */\nexport function setupIntegration(integration) {\n    if (installedIntegrations.indexOf(integration.name) !== -1) {\n        return;\n    }\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    logger.log(\"Integration installed: \" + integration.name);\n}\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(options) {\n    var integrations = {};\n    getIntegrationsToSetup(options).forEach(function (integration) {\n        integrations[integration.name] = integration;\n        setupIntegration(integration);\n    });\n    return integrations;\n}\n//# sourceMappingURL=integration.js.map","import * as tslib_1 from \"tslib\";\nimport { Dsn, isPrimitive, isThenable, logger, normalize, SyncPromise, truncate, uuid4 } from '@sentry/utils';\nimport { setupIntegrations } from './integration';\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nvar BaseClient = /** @class */ (function () {\n    /**\n     * Initializes this client instance.\n     *\n     * @param backendClass A constructor function to create the backend.\n     * @param options Options for the client.\n     */\n    function BaseClient(backendClass, options) {\n        /** Array of used integrations. */\n        this._integrations = {};\n        /** Is the client still processing a call? */\n        this._processing = false;\n        this._backend = new backendClass(options);\n        this._options = options;\n        if (options.dsn) {\n            this._dsn = new Dsn(options.dsn);\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureException = function (exception, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._getBackend()\n            .eventFromException(exception, hint)\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureMessage = function (message, level, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        var promisedEvent = isPrimitive(message)\n            ? this._getBackend().eventFromMessage(\"\" + message, level, hint)\n            : this._getBackend().eventFromException(message, hint);\n        promisedEvent\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureEvent = function (event, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._processEvent(event, hint, scope)\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getDsn = function () {\n        return this._dsn;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getOptions = function () {\n        return this._options;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.flush = function (timeout) {\n        var _this = this;\n        return this._isClientProcessing(timeout).then(function (status) {\n            clearInterval(status.interval);\n            return _this._getBackend()\n                .getTransport()\n                .close(timeout)\n                .then(function (transportFlushed) { return status.ready && transportFlushed; });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.close = function (timeout) {\n        var _this = this;\n        return this.flush(timeout).then(function (result) {\n            _this.getOptions().enabled = false;\n            return result;\n        });\n    };\n    /**\n     * Sets up the integrations\n     */\n    BaseClient.prototype.setupIntegrations = function () {\n        if (this._isEnabled()) {\n            this._integrations = setupIntegrations(this._options);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegration = function (integration) {\n        try {\n            return this._integrations[integration.id] || null;\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Client\");\n            return null;\n        }\n    };\n    /** Waits for the client to be done with processing. */\n    BaseClient.prototype._isClientProcessing = function (timeout) {\n        var _this = this;\n        return new SyncPromise(function (resolve) {\n            var ticked = 0;\n            var tick = 1;\n            var interval = 0;\n            clearInterval(interval);\n            interval = setInterval(function () {\n                if (!_this._processing) {\n                    resolve({\n                        interval: interval,\n                        ready: true,\n                    });\n                }\n                else {\n                    ticked += tick;\n                    if (timeout && ticked >= timeout) {\n                        resolve({\n                            interval: interval,\n                            ready: false,\n                        });\n                    }\n                }\n            }, tick);\n        });\n    };\n    /** Returns the current backend. */\n    BaseClient.prototype._getBackend = function () {\n        return this._backend;\n    };\n    /** Determines whether this SDK is enabled and a valid Dsn is present. */\n    BaseClient.prototype._isEnabled = function () {\n        return this.getOptions().enabled !== false && this._dsn !== undefined;\n    };\n    /**\n     * Adds common information to events.\n     *\n     * The information includes release and environment from `options`,\n     * breadcrumbs and context (extra, tags and user) from the scope.\n     *\n     * Information that is already present in the event is never overwritten. For\n     * nested objects, such as the context, keys are merged.\n     *\n     * @param event The original event.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A new event with more information.\n     */\n    BaseClient.prototype._prepareEvent = function (event, scope, hint) {\n        var _this = this;\n        var _a = this.getOptions(), environment = _a.environment, release = _a.release, dist = _a.dist, _b = _a.maxValueLength, maxValueLength = _b === void 0 ? 250 : _b, _c = _a.normalizeDepth, normalizeDepth = _c === void 0 ? 3 : _c;\n        var prepared = tslib_1.__assign({}, event);\n        if (prepared.environment === undefined && environment !== undefined) {\n            prepared.environment = environment;\n        }\n        if (prepared.release === undefined && release !== undefined) {\n            prepared.release = release;\n        }\n        if (prepared.dist === undefined && dist !== undefined) {\n            prepared.dist = dist;\n        }\n        if (prepared.message) {\n            prepared.message = truncate(prepared.message, maxValueLength);\n        }\n        var exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];\n        if (exception && exception.value) {\n            exception.value = truncate(exception.value, maxValueLength);\n        }\n        var request = prepared.request;\n        if (request && request.url) {\n            request.url = truncate(request.url, maxValueLength);\n        }\n        if (prepared.event_id === undefined) {\n            prepared.event_id = hint && hint.event_id ? hint.event_id : uuid4();\n        }\n        this._addIntegrations(prepared.sdk);\n        // We prepare the result here with a resolved Event.\n        var result = SyncPromise.resolve(prepared);\n        // This should be the last thing called, since we want that\n        // {@link Hub.addEventProcessor} gets the finished prepared event.\n        if (scope) {\n            // In case we have a hub we reassign it.\n            result = scope.applyToEvent(prepared, hint);\n        }\n        return result.then(function (evt) {\n            // tslint:disable-next-line:strict-type-predicates\n            if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n                return _this._normalizeEvent(evt, normalizeDepth);\n            }\n            return evt;\n        });\n    };\n    /**\n     * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n     * Normalized keys:\n     * - `breadcrumbs.data`\n     * - `user`\n     * - `contexts`\n     * - `extra`\n     * @param event Event\n     * @returns Normalized event\n     */\n    BaseClient.prototype._normalizeEvent = function (event, depth) {\n        if (!event) {\n            return null;\n        }\n        // tslint:disable:no-unsafe-any\n        return tslib_1.__assign({}, event, (event.breadcrumbs && {\n            breadcrumbs: event.breadcrumbs.map(function (b) { return (tslib_1.__assign({}, b, (b.data && {\n                data: normalize(b.data, depth),\n            }))); }),\n        }), (event.user && {\n            user: normalize(event.user, depth),\n        }), (event.contexts && {\n            contexts: normalize(event.contexts, depth),\n        }), (event.extra && {\n            extra: normalize(event.extra, depth),\n        }));\n    };\n    /**\n     * This function adds all used integrations to the SDK info in the event.\n     * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n     */\n    BaseClient.prototype._addIntegrations = function (sdkInfo) {\n        var integrationsArray = Object.keys(this._integrations);\n        if (sdkInfo && integrationsArray.length > 0) {\n            sdkInfo.integrations = integrationsArray;\n        }\n    };\n    /**\n     * Processes an event (either error or message) and sends it to Sentry.\n     *\n     * This also adds breadcrumbs and context information to the event. However,\n     * platform specific meta data (such as the User's IP address) must be added\n     * by the SDK implementor.\n     *\n     *\n     * @param event The event to send to Sentry.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n     */\n    BaseClient.prototype._processEvent = function (event, hint, scope) {\n        var _this = this;\n        var _a = this.getOptions(), beforeSend = _a.beforeSend, sampleRate = _a.sampleRate;\n        if (!this._isEnabled()) {\n            return SyncPromise.reject('SDK not enabled, will not send event.');\n        }\n        // 1.0 === 100% events are sent\n        // 0.0 === 0% events are sent\n        if (typeof sampleRate === 'number' && Math.random() > sampleRate) {\n            return SyncPromise.reject('This event has been sampled, will not send event.');\n        }\n        return new SyncPromise(function (resolve, reject) {\n            _this._prepareEvent(event, scope, hint)\n                .then(function (prepared) {\n                if (prepared === null) {\n                    reject('An event processor returned null, will not send event.');\n                    return;\n                }\n                var finalEvent = prepared;\n                var isInternalException = hint && hint.data && hint.data.__sentry__ === true;\n                if (isInternalException || !beforeSend) {\n                    _this._getBackend().sendEvent(finalEvent);\n                    resolve(finalEvent);\n                    return;\n                }\n                var beforeSendResult = beforeSend(prepared, hint);\n                // tslint:disable-next-line:strict-type-predicates\n                if (typeof beforeSendResult === 'undefined') {\n                    logger.error('`beforeSend` method has to return `null` or a valid event.');\n                }\n                else if (isThenable(beforeSendResult)) {\n                    _this._handleAsyncBeforeSend(beforeSendResult, resolve, reject);\n                }\n                else {\n                    finalEvent = beforeSendResult;\n                    if (finalEvent === null) {\n                        logger.log('`beforeSend` returned `null`, will not send event.');\n                        resolve(null);\n                        return;\n                    }\n                    // From here on we are really async\n                    _this._getBackend().sendEvent(finalEvent);\n                    resolve(finalEvent);\n                }\n            })\n                .then(null, function (reason) {\n                _this.captureException(reason, {\n                    data: {\n                        __sentry__: true,\n                    },\n                    originalException: reason,\n                });\n                reject(\"Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: \" + reason);\n            });\n        });\n    };\n    /**\n     * Resolves before send Promise and calls resolve/reject on parent SyncPromise.\n     */\n    BaseClient.prototype._handleAsyncBeforeSend = function (beforeSend, resolve, reject) {\n        var _this = this;\n        beforeSend\n            .then(function (processedEvent) {\n            if (processedEvent === null) {\n                reject('`beforeSend` returned `null`, will not send event.');\n                return;\n            }\n            // From here on we are really async\n            _this._getBackend().sendEvent(processedEvent);\n            resolve(processedEvent);\n        })\n            .then(null, function (e) {\n            reject(\"beforeSend rejected with \" + e);\n        });\n    };\n    return BaseClient;\n}());\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map","import { Status } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n/** Noop transport */\nvar NoopTransport = /** @class */ (function () {\n    function NoopTransport() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.sendEvent = function (_) {\n        return SyncPromise.resolve({\n            reason: \"NoopTransport: Event has been skipped because no Dsn is configured.\",\n            status: Status.Skipped,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.close = function (_) {\n        return SyncPromise.resolve(true);\n    };\n    return NoopTransport;\n}());\nexport { NoopTransport };\n//# sourceMappingURL=noop.js.map","import { logger, SentryError } from '@sentry/utils';\nimport { NoopTransport } from './transports/noop';\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nvar BaseBackend = /** @class */ (function () {\n    /** Creates a new backend instance. */\n    function BaseBackend(options) {\n        this._options = options;\n        if (!this._options.dsn) {\n            logger.warn('No DSN provided, backend will not do anything.');\n        }\n        this._transport = this._setupTransport();\n    }\n    /**\n     * Sets up the transport so it can be used later to send requests.\n     */\n    BaseBackend.prototype._setupTransport = function () {\n        return new NoopTransport();\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromException = function (_exception, _hint) {\n        throw new SentryError('Backend has to implement `eventFromException` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {\n        throw new SentryError('Backend has to implement `eventFromMessage` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendEvent = function (event) {\n        this._transport.sendEvent(event).then(null, function (reason) {\n            logger.error(\"Error while sending event: \" + reason);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.getTransport = function () {\n        return this._transport;\n    };\n    return BaseBackend;\n}());\nexport { BaseBackend };\n//# sourceMappingURL=basebackend.js.map","// tslint:disable:object-literal-sort-keys\nimport * as tslib_1 from \"tslib\";\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nvar chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nvar gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nvar geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nvar chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n/** JSDoc */\nexport function computeStackTrace(ex) {\n    // tslint:disable:no-unsafe-any\n    var stack = null;\n    var popSize = ex && ex.framesToPop;\n    try {\n        // This must be tried first because Opera 10 *destroys*\n        // its stacktrace property if you try to access the stack\n        // property first!!\n        stack = computeStackTraceFromStacktraceProp(ex);\n        if (stack) {\n            return popFrames(stack, popSize);\n        }\n    }\n    catch (e) {\n        // no-empty\n    }\n    try {\n        stack = computeStackTraceFromStackProp(ex);\n        if (stack) {\n            return popFrames(stack, popSize);\n        }\n    }\n    catch (e) {\n        // no-empty\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex && ex.name,\n        stack: [],\n        failed: true,\n    };\n}\n/** JSDoc */\n// tslint:disable-next-line:cyclomatic-complexity\nfunction computeStackTraceFromStackProp(ex) {\n    // tslint:disable:no-conditional-assignment\n    if (!ex || !ex.stack) {\n        return null;\n    }\n    var stack = [];\n    var lines = ex.stack.split('\\n');\n    var isEval;\n    var submatch;\n    var parts;\n    var element;\n    for (var i = 0; i < lines.length; ++i) {\n        if ((parts = chrome.exec(lines[i]))) {\n            var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n            isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n            if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n                // throw out eval line/column and use top-most line/column number\n                parts[2] = submatch[1]; // url\n                parts[3] = submatch[2]; // line\n                parts[4] = submatch[3]; // column\n            }\n            element = {\n                // working with the regexp above is super painful. it is quite a hack, but just stripping the `address at `\n                // prefix here seems like the quickest solution for now.\n                url: parts[2] && parts[2].indexOf('address at ') === 0 ? parts[2].substr('address at '.length) : parts[2],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: isNative ? [parts[2]] : [],\n                line: parts[3] ? +parts[3] : null,\n                column: parts[4] ? +parts[4] : null,\n            };\n        }\n        else if ((parts = winjs.exec(lines[i]))) {\n            element = {\n                url: parts[2],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: [],\n                line: +parts[3],\n                column: parts[4] ? +parts[4] : null,\n            };\n        }\n        else if ((parts = gecko.exec(lines[i]))) {\n            isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n            if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n                // throw out eval line/column and use top-most line number\n                parts[1] = parts[1] || \"eval\";\n                parts[3] = submatch[1];\n                parts[4] = submatch[2];\n                parts[5] = ''; // no column when eval\n            }\n            else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n                // FireFox uses this awesome columnNumber property for its top frame\n                // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n                // so adding 1\n                // NOTE: this hack doesn't work if top-most frame is eval\n                stack[0].column = ex.columnNumber + 1;\n            }\n            element = {\n                url: parts[3],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: parts[2] ? parts[2].split(',') : [],\n                line: parts[4] ? +parts[4] : null,\n                column: parts[5] ? +parts[5] : null,\n            };\n        }\n        else {\n            continue;\n        }\n        if (!element.func && element.line) {\n            element.func = UNKNOWN_FUNCTION;\n        }\n        stack.push(element);\n    }\n    if (!stack.length) {\n        return null;\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex.name,\n        stack: stack,\n    };\n}\n/** JSDoc */\nfunction computeStackTraceFromStacktraceProp(ex) {\n    if (!ex || !ex.stacktrace) {\n        return null;\n    }\n    // Access and store the stacktrace property before doing ANYTHING\n    // else to it because Opera is not very good at providing it\n    // reliably in other circumstances.\n    var stacktrace = ex.stacktrace;\n    var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n    var opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i;\n    var lines = stacktrace.split('\\n');\n    var stack = [];\n    var parts;\n    for (var line = 0; line < lines.length; line += 2) {\n        // tslint:disable:no-conditional-assignment\n        var element = null;\n        if ((parts = opera10Regex.exec(lines[line]))) {\n            element = {\n                url: parts[2],\n                func: parts[3],\n                args: [],\n                line: +parts[1],\n                column: null,\n            };\n        }\n        else if ((parts = opera11Regex.exec(lines[line]))) {\n            element = {\n                url: parts[6],\n                func: parts[3] || parts[4],\n                args: parts[5] ? parts[5].split(',') : [],\n                line: +parts[1],\n                column: +parts[2],\n            };\n        }\n        if (element) {\n            if (!element.func && element.line) {\n                element.func = UNKNOWN_FUNCTION;\n            }\n            stack.push(element);\n        }\n    }\n    if (!stack.length) {\n        return null;\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex.name,\n        stack: stack,\n    };\n}\n/** Remove N number of frames from the stack */\nfunction popFrames(stacktrace, popSize) {\n    try {\n        return tslib_1.__assign({}, stacktrace, { stack: stacktrace.stack.slice(popSize) });\n    }\n    catch (e) {\n        return stacktrace;\n    }\n}\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n    var message = ex && ex.message;\n    if (!message) {\n        return 'No error message';\n    }\n    if (message.error && typeof message.error.message === 'string') {\n        return message.error.message;\n    }\n    return message;\n}\n//# sourceMappingURL=tracekit.js.map","import { extractExceptionKeysForMessage, isEvent, normalizeToSize } from '@sentry/utils';\nimport { computeStackTrace } from './tracekit';\nvar STACKTRACE_LIMIT = 50;\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace) {\n    var frames = prepareFramesForEvent(stacktrace.stack);\n    var exception = {\n        type: stacktrace.name,\n        value: stacktrace.message,\n    };\n    if (frames && frames.length) {\n        exception.stacktrace = { frames: frames };\n    }\n    // tslint:disable-next-line:strict-type-predicates\n    if (exception.type === undefined && exception.value === '') {\n        exception.value = 'Unrecoverable error caught';\n    }\n    return exception;\n}\n/**\n * @hidden\n */\nexport function eventFromPlainObject(exception, syntheticException, rejection) {\n    var event = {\n        exception: {\n            values: [\n                {\n                    type: isEvent(exception) ? exception.constructor.name : rejection ? 'UnhandledRejection' : 'Error',\n                    value: \"Non-Error \" + (rejection ? 'promise rejection' : 'exception') + \" captured with keys: \" + extractExceptionKeysForMessage(exception),\n                },\n            ],\n        },\n        extra: {\n            __serialized__: normalizeToSize(exception),\n        },\n    };\n    if (syntheticException) {\n        var stacktrace = computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace) {\n    var exception = exceptionFromStacktrace(stacktrace);\n    return {\n        exception: {\n            values: [exception],\n        },\n    };\n}\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack) {\n    if (!stack || !stack.length) {\n        return [];\n    }\n    var localStack = stack;\n    var firstFrameFunction = localStack[0].func || '';\n    var lastFrameFunction = localStack[localStack.length - 1].func || '';\n    // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n    if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n        localStack = localStack.slice(1);\n    }\n    // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n    if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n        localStack = localStack.slice(0, -1);\n    }\n    // The frame where the crash happened, should be the last entry in the array\n    return localStack\n        .map(function (frame) { return ({\n        colno: frame.column === null ? undefined : frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line === null ? undefined : frame.line,\n    }); })\n        .slice(0, STACKTRACE_LIMIT)\n        .reverse();\n}\n//# sourceMappingURL=parsers.js.map","import { addExceptionMechanism, addExceptionTypeValue, isDOMError, isDOMException, isError, isErrorEvent, isEvent, isPlainObject, } from '@sentry/utils';\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { computeStackTrace } from './tracekit';\n/** JSDoc */\nexport function eventFromUnknownInput(exception, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event;\n    if (isErrorEvent(exception) && exception.error) {\n        // If it is an ErrorEvent with `error` property, extract it to get actual Error\n        var errorEvent = exception;\n        exception = errorEvent.error; // tslint:disable-line:no-parameter-reassignment\n        event = eventFromStacktrace(computeStackTrace(exception));\n        return event;\n    }\n    if (isDOMError(exception) || isDOMException(exception)) {\n        // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n        // then we just extract the name and message, as they don't provide anything else\n        // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n        // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n        var domException = exception;\n        var name_1 = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n        var message = domException.message ? name_1 + \": \" + domException.message : name_1;\n        event = eventFromString(message, syntheticException, options);\n        addExceptionTypeValue(event, message);\n        return event;\n    }\n    if (isError(exception)) {\n        // we have a real Error object, do nothing\n        event = eventFromStacktrace(computeStackTrace(exception));\n        return event;\n    }\n    if (isPlainObject(exception) || isEvent(exception)) {\n        // If it is plain Object or Event, serialize it manually and extract options\n        // This will allow us to group events based on top-level keys\n        // which is much better than creating new group when any key/value change\n        var objectException = exception;\n        event = eventFromPlainObject(objectException, syntheticException, options.rejection);\n        addExceptionMechanism(event, {\n            synthetic: true,\n        });\n        return event;\n    }\n    // If none of previous checks were valid, then it means that it's not:\n    // - an instance of DOMError\n    // - an instance of DOMException\n    // - an instance of Event\n    // - an instance of Error\n    // - a valid ErrorEvent (one with an error property)\n    // - a plain Object\n    //\n    // So bail out and capture it as a simple message:\n    event = eventFromString(exception, syntheticException, options);\n    addExceptionTypeValue(event, \"\" + exception, undefined);\n    addExceptionMechanism(event, {\n        synthetic: true,\n    });\n    return event;\n}\n// this._options.attachStacktrace\n/** JSDoc */\nexport function eventFromString(input, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event = {\n        message: input,\n    };\n    if (options.attachStacktrace && syntheticException) {\n        var stacktrace = computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n//# sourceMappingURL=eventbuilder.js.map","import { SentryError } from './error';\nimport { SyncPromise } from './syncpromise';\n/** A simple queue that holds promises. */\nvar PromiseBuffer = /** @class */ (function () {\n    function PromiseBuffer(_limit) {\n        this._limit = _limit;\n        /** Internal set of queued Promises */\n        this._buffer = [];\n    }\n    /**\n     * Says if the buffer is ready to take more requests\n     */\n    PromiseBuffer.prototype.isReady = function () {\n        return this._limit === undefined || this.length() < this._limit;\n    };\n    /**\n     * Add a promise to the queue.\n     *\n     * @param task Can be any PromiseLike<T>\n     * @returns The original promise.\n     */\n    PromiseBuffer.prototype.add = function (task) {\n        var _this = this;\n        if (!this.isReady()) {\n            return SyncPromise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n        }\n        if (this._buffer.indexOf(task) === -1) {\n            this._buffer.push(task);\n        }\n        task\n            .then(function () { return _this.remove(task); })\n            .then(null, function () {\n            return _this.remove(task).then(null, function () {\n                // We have to add this catch here otherwise we have an unhandledPromiseRejection\n                // because it's a new Promise chain.\n            });\n        });\n        return task;\n    };\n    /**\n     * Remove a promise to the queue.\n     *\n     * @param task Can be any PromiseLike<T>\n     * @returns Removed promise.\n     */\n    PromiseBuffer.prototype.remove = function (task) {\n        var removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n        return removedTask;\n    };\n    /**\n     * This function returns the number of unresolved promises in the queue.\n     */\n    PromiseBuffer.prototype.length = function () {\n        return this._buffer.length;\n    };\n    /**\n     * This will drain the whole queue, returns true if queue is empty or drained.\n     * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n     *\n     * @param timeout Number in ms to wait until it resolves with false.\n     */\n    PromiseBuffer.prototype.drain = function (timeout) {\n        var _this = this;\n        return new SyncPromise(function (resolve) {\n            var capturedSetTimeout = setTimeout(function () {\n                if (timeout && timeout > 0) {\n                    resolve(false);\n                }\n            }, timeout);\n            SyncPromise.all(_this._buffer)\n                .then(function () {\n                clearTimeout(capturedSetTimeout);\n                resolve(true);\n            })\n                .then(null, function () {\n                resolve(true);\n            });\n        });\n    };\n    return PromiseBuffer;\n}());\nexport { PromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map","var originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\nvar FunctionToString = /** @class */ (function () {\n    function FunctionToString() {\n        /**\n         * @inheritDoc\n         */\n        this.name = FunctionToString.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.prototype.setupOnce = function () {\n        originalFunctionToString = Function.prototype.toString;\n        Function.prototype.toString = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var context = this.__sentry_original__ || this;\n            // tslint:disable-next-line:no-unsafe-any\n            return originalFunctionToString.apply(context, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.id = 'FunctionToString';\n    return FunctionToString;\n}());\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map","import { API } from '@sentry/core';\nimport { PromiseBuffer, SentryError } from '@sentry/utils';\n/** Base Transport class implementation */\nvar BaseTransport = /** @class */ (function () {\n    function BaseTransport(options) {\n        this.options = options;\n        /** A simple buffer holding all requests. */\n        this._buffer = new PromiseBuffer(30);\n        this.url = new API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.sendEvent = function (_) {\n        throw new SentryError('Transport Class has to implement `sendEvent` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.close = function (timeout) {\n        return this._buffer.drain(timeout);\n    };\n    return BaseTransport;\n}());\nexport { BaseTransport };\n//# sourceMappingURL=base.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { getGlobalObject, logger, parseRetryAfterHeader, supportsReferrerPolicy, SyncPromise } from '@sentry/utils';\nimport { BaseTransport } from './base';\nvar global = getGlobalObject();\n/** `fetch` based transport */\nvar FetchTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(FetchTransport, _super);\n    function FetchTransport() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** Locks transport after receiving 429 response */\n        _this._disabledUntil = new Date(Date.now());\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    FetchTransport.prototype.sendEvent = function (event) {\n        var _this = this;\n        if (new Date(Date.now()) < this._disabledUntil) {\n            return Promise.reject({\n                event: event,\n                reason: \"Transport locked till \" + this._disabledUntil + \" due to too many requests.\",\n                status: 429,\n            });\n        }\n        var defaultOptions = {\n            body: JSON.stringify(event),\n            method: 'POST',\n            // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n            // https://caniuse.com/#feat=referrer-policy\n            // It doesn't. And it throw exception instead of ignoring this parameter...\n            // REF: https://github.com/getsentry/raven-js/issues/1233\n            referrerPolicy: (supportsReferrerPolicy() ? 'origin' : ''),\n        };\n        if (this.options.headers !== undefined) {\n            defaultOptions.headers = this.options.headers;\n        }\n        return this._buffer.add(new SyncPromise(function (resolve, reject) {\n            global\n                .fetch(_this.url, defaultOptions)\n                .then(function (response) {\n                var status = Status.fromHttpCode(response.status);\n                if (status === Status.Success) {\n                    resolve({ status: status });\n                    return;\n                }\n                if (status === Status.RateLimit) {\n                    var now = Date.now();\n                    _this._disabledUntil = new Date(now + parseRetryAfterHeader(now, response.headers.get('Retry-After')));\n                    logger.warn(\"Too many requests, backing off till: \" + _this._disabledUntil);\n                }\n                reject(response);\n            })\n                .catch(reject);\n        }));\n    };\n    return FetchTransport;\n}(BaseTransport));\nexport { FetchTransport };\n//# sourceMappingURL=fetch.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { logger, parseRetryAfterHeader, SyncPromise } from '@sentry/utils';\nimport { BaseTransport } from './base';\n/** `XHR` based transport */\nvar XHRTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(XHRTransport, _super);\n    function XHRTransport() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** Locks transport after receiving 429 response */\n        _this._disabledUntil = new Date(Date.now());\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendEvent = function (event) {\n        var _this = this;\n        if (new Date(Date.now()) < this._disabledUntil) {\n            return Promise.reject({\n                event: event,\n                reason: \"Transport locked till \" + this._disabledUntil + \" due to too many requests.\",\n                status: 429,\n            });\n        }\n        return this._buffer.add(new SyncPromise(function (resolve, reject) {\n            var request = new XMLHttpRequest();\n            request.onreadystatechange = function () {\n                if (request.readyState !== 4) {\n                    return;\n                }\n                var status = Status.fromHttpCode(request.status);\n                if (status === Status.Success) {\n                    resolve({ status: status });\n                    return;\n                }\n                if (status === Status.RateLimit) {\n                    var now = Date.now();\n                    _this._disabledUntil = new Date(now + parseRetryAfterHeader(now, request.getResponseHeader('Retry-After')));\n                    logger.warn(\"Too many requests, backing off till: \" + _this._disabledUntil);\n                }\n                reject(request);\n            };\n            request.open('POST', _this.url);\n            for (var header in _this.options.headers) {\n                if (_this.options.headers.hasOwnProperty(header)) {\n                    request.setRequestHeader(header, _this.options.headers[header]);\n                }\n            }\n            request.send(JSON.stringify(event));\n        }));\n    };\n    return XHRTransport;\n}(BaseTransport));\nexport { XHRTransport };\n//# sourceMappingURL=xhr.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseBackend } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionMechanism, supportsFetch, SyncPromise } from '@sentry/utils';\nimport { eventFromString, eventFromUnknownInput } from './eventbuilder';\nimport { FetchTransport, XHRTransport } from './transports';\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nvar BrowserBackend = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserBackend, _super);\n    function BrowserBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype._setupTransport = function () {\n        if (!this._options.dsn) {\n            // We return the noop transport here in case there is no Dsn.\n            return _super.prototype._setupTransport.call(this);\n        }\n        var transportOptions = tslib_1.__assign({}, this._options.transportOptions, { dsn: this._options.dsn });\n        if (this._options.transport) {\n            return new this._options.transport(transportOptions);\n        }\n        if (supportsFetch()) {\n            return new FetchTransport(transportOptions);\n        }\n        return new XHRTransport(transportOptions);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromException = function (exception, hint) {\n        var syntheticException = (hint && hint.syntheticException) || undefined;\n        var event = eventFromUnknownInput(exception, syntheticException, {\n            attachStacktrace: this._options.attachStacktrace,\n        });\n        addExceptionMechanism(event, {\n            handled: true,\n            type: 'generic',\n        });\n        event.level = Severity.Error;\n        if (hint && hint.event_id) {\n            event.event_id = hint.event_id;\n        }\n        return SyncPromise.resolve(event);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromMessage = function (message, level, hint) {\n        if (level === void 0) { level = Severity.Info; }\n        var syntheticException = (hint && hint.syntheticException) || undefined;\n        var event = eventFromString(message, syntheticException, {\n            attachStacktrace: this._options.attachStacktrace,\n        });\n        event.level = level;\n        if (hint && hint.event_id) {\n            event.event_id = hint.event_id;\n        }\n        return SyncPromise.resolve(event);\n    };\n    return BrowserBackend;\n}(BaseBackend));\nexport { BrowserBackend };\n//# sourceMappingURL=backend.js.map","export var SDK_NAME = 'sentry.javascript.browser';\nexport var SDK_VERSION = '5.15.5';\n//# sourceMappingURL=version.js.map","import * as tslib_1 from \"tslib\";\nimport { API, BaseClient } from '@sentry/core';\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { BrowserBackend } from './backend';\nimport { SDK_NAME, SDK_VERSION } from './version';\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nvar BrowserClient = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserClient, _super);\n    /**\n     * Creates a new Browser SDK instance.\n     *\n     * @param options Configuration options for this SDK.\n     */\n    function BrowserClient(options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, BrowserBackend, options) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._prepareEvent = function (event, scope, hint) {\n        event.platform = event.platform || 'javascript';\n        event.sdk = tslib_1.__assign({}, event.sdk, { name: SDK_NAME, packages: tslib_1.__spread(((event.sdk && event.sdk.packages) || []), [\n                {\n                    name: 'npm:@sentry/browser',\n                    version: SDK_VERSION,\n                },\n            ]), version: SDK_VERSION });\n        return _super.prototype._prepareEvent.call(this, event, scope, hint);\n    };\n    /**\n     * Show a report dialog to the user to send feedback to a specific event.\n     *\n     * @param options Set individual options for the dialog\n     */\n    BrowserClient.prototype.showReportDialog = function (options) {\n        if (options === void 0) { options = {}; }\n        // doesn't work without a document (React Native)\n        var document = getGlobalObject().document;\n        if (!document) {\n            return;\n        }\n        if (!this._isEnabled()) {\n            logger.error('Trying to call showReportDialog with Sentry Client is disabled');\n            return;\n        }\n        var dsn = options.dsn || this.getDsn();\n        if (!options.eventId) {\n            logger.error('Missing `eventId` option in showReportDialog call');\n            return;\n        }\n        if (!dsn) {\n            logger.error('Missing `Dsn` option in showReportDialog call');\n            return;\n        }\n        var script = document.createElement('script');\n        script.async = true;\n        script.src = new API(dsn).getReportDialogEndpoint(options);\n        if (options.onLoad) {\n            script.onload = options.onLoad;\n        }\n        (document.head || document.body).appendChild(script);\n    };\n    return BrowserClient;\n}(BaseClient));\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\nvar InboundFilters = /** @class */ (function () {\n    function InboundFilters(_options) {\n        if (_options === void 0) { _options = {}; }\n        this._options = _options;\n        /**\n         * @inheritDoc\n         */\n        this.name = InboundFilters.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            var hub = getCurrentHub();\n            if (!hub) {\n                return event;\n            }\n            var self = hub.getIntegration(InboundFilters);\n            if (self) {\n                var client = hub.getClient();\n                var clientOptions = client ? client.getOptions() : {};\n                var options = self._mergeOptions(clientOptions);\n                if (self._shouldDropEvent(event, options)) {\n                    return null;\n                }\n            }\n            return event;\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._shouldDropEvent = function (event, options) {\n        if (this._isSentryError(event, options)) {\n            logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isIgnoredError(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isBlacklistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `blacklistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        if (!this._isWhitelistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to not being matched by `whitelistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        return false;\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isSentryError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreInternal) {\n            return false;\n        }\n        try {\n            return ((event &&\n                event.exception &&\n                event.exception.values &&\n                event.exception.values[0] &&\n                event.exception.values[0].type === 'SentryError') ||\n                false);\n        }\n        catch (_oO) {\n            return false;\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isIgnoredError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreErrors || !options.ignoreErrors.length) {\n            return false;\n        }\n        return this._getPossibleEventMessages(event).some(function (message) {\n            // Not sure why TypeScript complains here...\n            return options.ignoreErrors.some(function (pattern) { return isMatchingPattern(message, pattern); });\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isBlacklistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.blacklistUrls || !options.blacklistUrls.length) {\n            return false;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? false : options.blacklistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isWhitelistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.whitelistUrls || !options.whitelistUrls.length) {\n            return true;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? true : options.whitelistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._mergeOptions = function (clientOptions) {\n        if (clientOptions === void 0) { clientOptions = {}; }\n        return {\n            blacklistUrls: tslib_1.__spread((this._options.blacklistUrls || []), (clientOptions.blacklistUrls || [])),\n            ignoreErrors: tslib_1.__spread((this._options.ignoreErrors || []), (clientOptions.ignoreErrors || []), DEFAULT_IGNORE_ERRORS),\n            ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n            whitelistUrls: tslib_1.__spread((this._options.whitelistUrls || []), (clientOptions.whitelistUrls || [])),\n        };\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getPossibleEventMessages = function (event) {\n        if (event.message) {\n            return [event.message];\n        }\n        if (event.exception) {\n            try {\n                var _a = (event.exception.values && event.exception.values[0]) || {}, _b = _a.type, type = _b === void 0 ? '' : _b, _c = _a.value, value = _c === void 0 ? '' : _c;\n                return [\"\" + value, type + \": \" + value];\n            }\n            catch (oO) {\n                logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n                return [];\n            }\n        }\n        return [];\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getEventFilterUrl = function (event) {\n        try {\n            if (event.stacktrace) {\n                var frames_1 = event.stacktrace.frames;\n                return (frames_1 && frames_1[frames_1.length - 1].filename) || null;\n            }\n            if (event.exception) {\n                var frames_2 = event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n                return (frames_2 && frames_2[frames_2.length - 1].filename) || null;\n            }\n            return null;\n        }\n        catch (oO) {\n            logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.id = 'InboundFilters';\n    return InboundFilters;\n}());\nexport { InboundFilters };\n//# sourceMappingURL=inboundfilters.js.map","import * as tslib_1 from \"tslib\";\nimport { captureException, withScope } from '@sentry/core';\nimport { addExceptionMechanism, addExceptionTypeValue } from '@sentry/utils';\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError() {\n    return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\nexport function ignoreNextOnError() {\n    // onerror should trigger before setTimeout\n    ignoreOnError += 1;\n    setTimeout(function () {\n        ignoreOnError -= 1;\n    });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(fn, options, before) {\n    if (options === void 0) { options = {}; }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof fn !== 'function') {\n        return fn;\n    }\n    try {\n        // We don't wanna wrap it twice\n        if (fn.__sentry__) {\n            return fn;\n        }\n        // If this has already been wrapped in the past, return that wrapped function\n        if (fn.__sentry_wrapped__) {\n            return fn.__sentry_wrapped__;\n        }\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        // Bail on wrapping and return the function as-is (defers to window.onerror).\n        return fn;\n    }\n    var sentryWrapped = function () {\n        var args = Array.prototype.slice.call(arguments);\n        // tslint:disable:no-unsafe-any\n        try {\n            // tslint:disable-next-line:strict-type-predicates\n            if (before && typeof before === 'function') {\n                before.apply(this, arguments);\n            }\n            var wrappedArguments = args.map(function (arg) { return wrap(arg, options); });\n            if (fn.handleEvent) {\n                // Attempt to invoke user-land function\n                // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n                //       means the sentry.javascript SDK caught an error invoking your application code. This\n                //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n                return fn.handleEvent.apply(this, wrappedArguments);\n            }\n            // Attempt to invoke user-land function\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n            //       means the sentry.javascript SDK caught an error invoking your application code. This\n            //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n            return fn.apply(this, wrappedArguments);\n            // tslint:enable:no-unsafe-any\n        }\n        catch (ex) {\n            ignoreNextOnError();\n            withScope(function (scope) {\n                scope.addEventProcessor(function (event) {\n                    var processedEvent = tslib_1.__assign({}, event);\n                    if (options.mechanism) {\n                        addExceptionTypeValue(processedEvent, undefined, undefined);\n                        addExceptionMechanism(processedEvent, options.mechanism);\n                    }\n                    processedEvent.extra = tslib_1.__assign({}, processedEvent.extra, { arguments: args });\n                    return processedEvent;\n                });\n                captureException(ex);\n            });\n            throw ex;\n        }\n    };\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n    try {\n        for (var property in fn) {\n            if (Object.prototype.hasOwnProperty.call(fn, property)) {\n                sentryWrapped[property] = fn[property];\n            }\n        }\n    }\n    catch (_oO) { } // tslint:disable-line:no-empty\n    fn.prototype = fn.prototype || {};\n    sentryWrapped.prototype = fn.prototype;\n    Object.defineProperty(fn, '__sentry_wrapped__', {\n        enumerable: false,\n        value: sentryWrapped,\n    });\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    Object.defineProperties(sentryWrapped, {\n        __sentry__: {\n            enumerable: false,\n            value: true,\n        },\n        __sentry_original__: {\n            enumerable: false,\n            value: fn,\n        },\n    });\n    // Restore original function name (not all browsers allow that)\n    try {\n        var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n        if (descriptor.configurable) {\n            Object.defineProperty(sentryWrapped, 'name', {\n                get: function () {\n                    return fn.name;\n                },\n            });\n        }\n    }\n    catch (_oO) {\n        /*no-empty*/\n    }\n    return sentryWrapped;\n}\n//# sourceMappingURL=helpers.js.map","import { fill, getFunctionName, getGlobalObject } from '@sentry/utils';\nimport { wrap } from '../helpers';\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nvar TryCatch = /** @class */ (function () {\n    function TryCatch() {\n        /** JSDoc */\n        this._ignoreOnError = 0;\n        /**\n         * @inheritDoc\n         */\n        this.name = TryCatch.id;\n    }\n    /** JSDoc */\n    TryCatch.prototype._wrapTimeFunction = function (original) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var originalCallback = args[0];\n            args[0] = wrap(originalCallback, {\n                mechanism: {\n                    data: { function: getFunctionName(original) },\n                    handled: true,\n                    type: 'instrument',\n                },\n            });\n            return original.apply(this, args);\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapRAF = function (original) {\n        return function (callback) {\n            return original(wrap(callback, {\n                mechanism: {\n                    data: {\n                        function: 'requestAnimationFrame',\n                        handler: getFunctionName(original),\n                    },\n                    handled: true,\n                    type: 'instrument',\n                },\n            }));\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapEventTarget = function (target) {\n        var global = getGlobalObject();\n        var proto = global[target] && global[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                try {\n                    // tslint:disable-next-line:no-unbound-method strict-type-predicates\n                    if (typeof fn.handleEvent === 'function') {\n                        fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n                            mechanism: {\n                                data: {\n                                    function: 'handleEvent',\n                                    handler: getFunctionName(fn),\n                                    target: target,\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        });\n                    }\n                }\n                catch (err) {\n                    // can sometimes get 'Permission denied to access property \"handle Event'\n                }\n                return original.call(this, eventName, wrap(fn, {\n                    mechanism: {\n                        data: {\n                            function: 'addEventListener',\n                            handler: getFunctionName(fn),\n                            target: target,\n                        },\n                        handled: true,\n                        type: 'instrument',\n                    },\n                }), options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (original) {\n            return function (eventName, fn, options) {\n                var callback = fn;\n                try {\n                    callback = callback && (callback.__sentry_wrapped__ || callback);\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return original.call(this, eventName, callback, options);\n            };\n        });\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapXHR = function (originalSend) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var xhr = this; // tslint:disable-line:no-this-assignment\n            var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n            xmlHttpRequestProps.forEach(function (prop) {\n                if (prop in xhr && typeof xhr[prop] === 'function') {\n                    fill(xhr, prop, function (original) {\n                        var wrapOptions = {\n                            mechanism: {\n                                data: {\n                                    function: prop,\n                                    handler: getFunctionName(original),\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        };\n                        // If Instrument integration has been called before TryCatch, get the name of original function\n                        if (original.__sentry_original__) {\n                            wrapOptions.mechanism.data.handler = getFunctionName(original.__sentry_original__);\n                        }\n                        // Otherwise wrap directly\n                        return wrap(original, wrapOptions);\n                    });\n                }\n            });\n            return originalSend.apply(this, args);\n        };\n    };\n    /**\n     * Wrap timer functions and event targets to catch errors\n     * and provide better metadata.\n     */\n    TryCatch.prototype.setupOnce = function () {\n        this._ignoreOnError = this._ignoreOnError;\n        var global = getGlobalObject();\n        fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n        fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n        fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n        if ('XMLHttpRequest' in global) {\n            fill(XMLHttpRequest.prototype, 'send', this._wrapXHR.bind(this));\n        }\n        [\n            'EventTarget',\n            'Window',\n            'Node',\n            'ApplicationCache',\n            'AudioTrackList',\n            'ChannelMergerNode',\n            'CryptoOperation',\n            'EventSource',\n            'FileReader',\n            'HTMLUnknownElement',\n            'IDBDatabase',\n            'IDBRequest',\n            'IDBTransaction',\n            'KeyOperation',\n            'MediaController',\n            'MessagePort',\n            'ModalWindow',\n            'Notification',\n            'SVGElementInstance',\n            'Screen',\n            'TextTrack',\n            'TextTrackCue',\n            'TextTrackList',\n            'WebSocket',\n            'WebSocketWorker',\n            'Worker',\n            'XMLHttpRequest',\n            'XMLHttpRequestEventTarget',\n            'XMLHttpRequestUpload',\n        ].forEach(this._wrapEventTarget.bind(this));\n    };\n    /**\n     * @inheritDoc\n     */\n    TryCatch.id = 'TryCatch';\n    return TryCatch;\n}());\nexport { TryCatch };\n//# sourceMappingURL=trycatch.js.map","/* tslint:disable:only-arrow-functions no-unsafe-any */\nimport * as tslib_1 from \"tslib\";\nimport { isInstanceOf, isString } from './is';\nimport { logger } from './logger';\nimport { getFunctionName, getGlobalObject } from './misc';\nimport { fill } from './object';\nimport { supportsHistory, supportsNativeFetch } from './supports';\nvar global = getGlobalObject();\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\nvar handlers = {};\nvar instrumented = {};\n/** Instruments given API */\nfunction instrument(type) {\n    if (instrumented[type]) {\n        return;\n    }\n    instrumented[type] = true;\n    switch (type) {\n        case 'console':\n            instrumentConsole();\n            break;\n        case 'dom':\n            instrumentDOM();\n            break;\n        case 'xhr':\n            instrumentXHR();\n            break;\n        case 'fetch':\n            instrumentFetch();\n            break;\n        case 'history':\n            instrumentHistory();\n            break;\n        case 'error':\n            instrumentError();\n            break;\n        case 'unhandledrejection':\n            instrumentUnhandledRejection();\n            break;\n        default:\n            logger.warn('unknown instrumentation type:', type);\n    }\n}\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(handler) {\n    // tslint:disable-next-line:strict-type-predicates\n    if (!handler || typeof handler.type !== 'string' || typeof handler.callback !== 'function') {\n        return;\n    }\n    handlers[handler.type] = handlers[handler.type] || [];\n    handlers[handler.type].push(handler.callback);\n    instrument(handler.type);\n}\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n    var e_1, _a;\n    if (!type || !handlers[type]) {\n        return;\n    }\n    try {\n        for (var _b = tslib_1.__values(handlers[type] || []), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var handler = _c.value;\n            try {\n                handler(data);\n            }\n            catch (e) {\n                logger.error(\"Error while triggering instrumentation handler.\\nType: \" + type + \"\\nName: \" + getFunctionName(handler) + \"\\nError: \" + e);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\n/** JSDoc */\nfunction instrumentConsole() {\n    if (!('console' in global)) {\n        return;\n    }\n    ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function (level) {\n        if (!(level in global.console)) {\n            return;\n        }\n        fill(global.console, level, function (originalConsoleLevel) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                triggerHandlers('console', { args: args, level: level });\n                // this fails for some browsers. :(\n                if (originalConsoleLevel) {\n                    Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n                }\n            };\n        });\n    });\n}\n/** JSDoc */\nfunction instrumentFetch() {\n    if (!supportsNativeFetch()) {\n        return;\n    }\n    fill(global, 'fetch', function (originalFetch) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var commonHandlerData = {\n                args: args,\n                fetchData: {\n                    method: getFetchMethod(args),\n                    url: getFetchUrl(args),\n                },\n                startTimestamp: Date.now(),\n            };\n            triggerHandlers('fetch', tslib_1.__assign({}, commonHandlerData));\n            return originalFetch.apply(global, args).then(function (response) {\n                triggerHandlers('fetch', tslib_1.__assign({}, commonHandlerData, { endTimestamp: Date.now(), response: response }));\n                return response;\n            }, function (error) {\n                triggerHandlers('fetch', tslib_1.__assign({}, commonHandlerData, { endTimestamp: Date.now(), error: error }));\n                throw error;\n            });\n        };\n    });\n}\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs) {\n    if (fetchArgs === void 0) { fetchArgs = []; }\n    if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n        return String(fetchArgs[0].method).toUpperCase();\n    }\n    if (fetchArgs[1] && fetchArgs[1].method) {\n        return String(fetchArgs[1].method).toUpperCase();\n    }\n    return 'GET';\n}\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs) {\n    if (fetchArgs === void 0) { fetchArgs = []; }\n    if (typeof fetchArgs[0] === 'string') {\n        return fetchArgs[0];\n    }\n    if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n        return fetchArgs[0].url;\n    }\n    return String(fetchArgs[0]);\n}\n/** JSDoc */\nfunction instrumentXHR() {\n    if (!('XMLHttpRequest' in global)) {\n        return;\n    }\n    var xhrproto = XMLHttpRequest.prototype;\n    fill(xhrproto, 'open', function (originalOpen) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var url = args[1];\n            this.__sentry_xhr__ = {\n                method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n                url: args[1],\n            };\n            // if Sentry key appears in URL, don't capture it as a request\n            if (isString(url) && this.__sentry_xhr__.method === 'POST' && url.match(/sentry_key/)) {\n                this.__sentry_own_request__ = true;\n            }\n            return originalOpen.apply(this, args);\n        };\n    });\n    fill(xhrproto, 'send', function (originalSend) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var xhr = this; // tslint:disable-line:no-this-assignment\n            var commonHandlerData = {\n                args: args,\n                startTimestamp: Date.now(),\n                xhr: xhr,\n            };\n            triggerHandlers('xhr', tslib_1.__assign({}, commonHandlerData));\n            xhr.addEventListener('readystatechange', function () {\n                if (xhr.readyState === 4) {\n                    try {\n                        // touching statusCode in some platforms throws\n                        // an exception\n                        if (xhr.__sentry_xhr__) {\n                            xhr.__sentry_xhr__.status_code = xhr.status;\n                        }\n                    }\n                    catch (e) {\n                        /* do nothing */\n                    }\n                    triggerHandlers('xhr', tslib_1.__assign({}, commonHandlerData, { endTimestamp: Date.now() }));\n                }\n            });\n            return originalSend.apply(this, args);\n        };\n    });\n}\nvar lastHref;\n/** JSDoc */\nfunction instrumentHistory() {\n    if (!supportsHistory()) {\n        return;\n    }\n    var oldOnPopState = global.onpopstate;\n    global.onpopstate = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var to = global.location.href;\n        // keep track of the current URL state, as we always receive only the updated state\n        var from = lastHref;\n        lastHref = to;\n        triggerHandlers('history', {\n            from: from,\n            to: to,\n        });\n        if (oldOnPopState) {\n            return oldOnPopState.apply(this, args);\n        }\n    };\n    /** @hidden */\n    function historyReplacementFunction(originalHistoryFunction) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var url = args.length > 2 ? args[2] : undefined;\n            if (url) {\n                // coerce to string (this is what pushState does)\n                var from = lastHref;\n                var to = String(url);\n                // keep track of the current URL state, as we always receive only the updated state\n                lastHref = to;\n                triggerHandlers('history', {\n                    from: from,\n                    to: to,\n                });\n            }\n            return originalHistoryFunction.apply(this, args);\n        };\n    }\n    fill(global.history, 'pushState', historyReplacementFunction);\n    fill(global.history, 'replaceState', historyReplacementFunction);\n}\n/** JSDoc */\nfunction instrumentDOM() {\n    if (!('document' in global)) {\n        return;\n    }\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    global.document.addEventListener('click', domEventHandler('click', triggerHandlers.bind(null, 'dom')), false);\n    global.document.addEventListener('keypress', keypressEventHandler(triggerHandlers.bind(null, 'dom')), false);\n    // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n    ['EventTarget', 'Node'].forEach(function (target) {\n        var proto = global[target] && global[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                if (fn && fn.handleEvent) {\n                    if (eventName === 'click') {\n                        fill(fn, 'handleEvent', function (innerOriginal) {\n                            return function (event) {\n                                domEventHandler('click', triggerHandlers.bind(null, 'dom'))(event);\n                                return innerOriginal.call(this, event);\n                            };\n                        });\n                    }\n                    if (eventName === 'keypress') {\n                        fill(fn, 'handleEvent', function (innerOriginal) {\n                            return function (event) {\n                                keypressEventHandler(triggerHandlers.bind(null, 'dom'))(event);\n                                return innerOriginal.call(this, event);\n                            };\n                        });\n                    }\n                }\n                else {\n                    if (eventName === 'click') {\n                        domEventHandler('click', triggerHandlers.bind(null, 'dom'), true)(this);\n                    }\n                    if (eventName === 'keypress') {\n                        keypressEventHandler(triggerHandlers.bind(null, 'dom'))(this);\n                    }\n                }\n                return original.call(this, eventName, fn, options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (original) {\n            return function (eventName, fn, options) {\n                var callback = fn;\n                try {\n                    callback = callback && (callback.__sentry_wrapped__ || callback);\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return original.call(this, eventName, callback, options);\n            };\n        });\n    });\n}\nvar debounceDuration = 1000;\nvar debounceTimer = 0;\nvar keypressTimeout;\nvar lastCapturedEvent;\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param name the event name (e.g. \"click\")\n * @param handler function that will be triggered\n * @param debounce decides whether it should wait till another event loop\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction domEventHandler(name, handler, debounce) {\n    if (debounce === void 0) { debounce = false; }\n    return function (event) {\n        // reset keypress timeout; e.g. triggering a 'click' after\n        // a 'keypress' will reset the keypress debounce so that a new\n        // set of keypresses can be recorded\n        keypressTimeout = undefined;\n        // It's possible this handler might trigger multiple times for the same\n        // event (e.g. event propagation through node ancestors). Ignore if we've\n        // already captured the event.\n        if (!event || lastCapturedEvent === event) {\n            return;\n        }\n        lastCapturedEvent = event;\n        if (debounceTimer) {\n            clearTimeout(debounceTimer);\n        }\n        if (debounce) {\n            debounceTimer = setTimeout(function () {\n                handler({ event: event, name: name });\n            });\n        }\n        else {\n            handler({ event: event, name: name });\n        }\n    };\n}\n/**\n * Wraps addEventListener to capture keypress UI events\n * @param handler function that will be triggered\n * @returns wrapped keypress events handler\n * @hidden\n */\nfunction keypressEventHandler(handler) {\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function (event) {\n        var target;\n        try {\n            target = event.target;\n        }\n        catch (e) {\n            // just accessing event properties can throw an exception in some rare circumstances\n            // see: https://github.com/getsentry/raven-js/issues/838\n            return;\n        }\n        var tagName = target && target.tagName;\n        // only consider keypress events on actual input elements\n        // this will disregard keypresses targeting body (e.g. tabbing\n        // through elements, hotkeys, etc)\n        if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)) {\n            return;\n        }\n        // record first keypress in a series, but ignore subsequent\n        // keypresses until debounce clears\n        if (!keypressTimeout) {\n            domEventHandler('input', handler)(event);\n        }\n        clearTimeout(keypressTimeout);\n        keypressTimeout = setTimeout(function () {\n            keypressTimeout = undefined;\n        }, debounceDuration);\n    };\n}\nvar _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n    _oldOnErrorHandler = global.onerror;\n    global.onerror = function (msg, url, line, column, error) {\n        triggerHandlers('error', {\n            column: column,\n            error: error,\n            line: line,\n            msg: msg,\n            url: url,\n        });\n        if (_oldOnErrorHandler) {\n            return _oldOnErrorHandler.apply(this, arguments);\n        }\n        return false;\n    };\n}\nvar _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n    _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n    global.onunhandledrejection = function (e) {\n        triggerHandlers('unhandledrejection', e);\n        if (_oldOnUnhandledRejectionHandler) {\n            return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n        }\n        return true;\n    };\n}\n//# sourceMappingURL=instrument.js.map","import * as tslib_1 from \"tslib\";\nimport { API, getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addInstrumentationHandler, getEventDescription, getGlobalObject, htmlTreeAsString, logger, parseUrl, safeJoin, } from '@sentry/utils';\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nvar Breadcrumbs = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Breadcrumbs(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = Breadcrumbs.id;\n        this._options = tslib_1.__assign({ console: true, dom: true, fetch: true, history: true, sentry: true, xhr: true }, options);\n    }\n    /**\n     * Creates breadcrumbs from console API calls\n     */\n    Breadcrumbs.prototype._consoleBreadcrumb = function (handlerData) {\n        var breadcrumb = {\n            category: 'console',\n            data: {\n                arguments: handlerData.args,\n                logger: 'console',\n            },\n            level: Severity.fromString(handlerData.level),\n            message: safeJoin(handlerData.args, ' '),\n        };\n        if (handlerData.level === 'assert') {\n            if (handlerData.args[0] === false) {\n                breadcrumb.message = \"Assertion failed: \" + (safeJoin(handlerData.args.slice(1), ' ') || 'console.assert');\n                breadcrumb.data.arguments = handlerData.args.slice(1);\n            }\n            else {\n                // Don't capture a breadcrumb for passed assertions\n                return;\n            }\n        }\n        getCurrentHub().addBreadcrumb(breadcrumb, {\n            input: handlerData.args,\n            level: handlerData.level,\n        });\n    };\n    /**\n     * Creates breadcrumbs from DOM API calls\n     */\n    Breadcrumbs.prototype._domBreadcrumb = function (handlerData) {\n        var target;\n        // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n        try {\n            target = handlerData.event.target\n                ? htmlTreeAsString(handlerData.event.target)\n                : htmlTreeAsString(handlerData.event);\n        }\n        catch (e) {\n            target = '<unknown>';\n        }\n        if (target.length === 0) {\n            return;\n        }\n        getCurrentHub().addBreadcrumb({\n            category: \"ui.\" + handlerData.name,\n            message: target,\n        }, {\n            event: handlerData.event,\n            name: handlerData.name,\n        });\n    };\n    /**\n     * Creates breadcrumbs from XHR API calls\n     */\n    Breadcrumbs.prototype._xhrBreadcrumb = function (handlerData) {\n        if (handlerData.endTimestamp) {\n            // We only capture complete, non-sentry requests\n            if (handlerData.xhr.__sentry_own_request__) {\n                return;\n            }\n            getCurrentHub().addBreadcrumb({\n                category: 'xhr',\n                data: handlerData.xhr.__sentry_xhr__,\n                type: 'http',\n            }, {\n                xhr: handlerData.xhr,\n            });\n            return;\n        }\n        // We only capture issued sentry requests\n        if (this._options.sentry && handlerData.xhr.__sentry_own_request__) {\n            addSentryBreadcrumb(handlerData.args[0]);\n        }\n    };\n    /**\n     * Creates breadcrumbs from fetch API calls\n     */\n    Breadcrumbs.prototype._fetchBreadcrumb = function (handlerData) {\n        // We only capture complete fetch requests\n        if (!handlerData.endTimestamp) {\n            return;\n        }\n        var client = getCurrentHub().getClient();\n        var dsn = client && client.getDsn();\n        if (this._options.sentry && dsn) {\n            var filterUrl = new API(dsn).getStoreEndpoint();\n            // if Sentry key appears in URL, don't capture it as a request\n            // but rather as our own 'sentry' type breadcrumb\n            if (filterUrl &&\n                handlerData.fetchData.url.indexOf(filterUrl) !== -1 &&\n                handlerData.fetchData.method === 'POST' &&\n                handlerData.args[1] &&\n                handlerData.args[1].body) {\n                addSentryBreadcrumb(handlerData.args[1].body);\n                return;\n            }\n        }\n        if (handlerData.error) {\n            getCurrentHub().addBreadcrumb({\n                category: 'fetch',\n                data: tslib_1.__assign({}, handlerData.fetchData, { status_code: handlerData.response.status }),\n                level: Severity.Error,\n                type: 'http',\n            }, {\n                data: handlerData.error,\n                input: handlerData.args,\n            });\n        }\n        else {\n            getCurrentHub().addBreadcrumb({\n                category: 'fetch',\n                data: tslib_1.__assign({}, handlerData.fetchData, { status_code: handlerData.response.status }),\n                type: 'http',\n            }, {\n                input: handlerData.args,\n                response: handlerData.response,\n            });\n        }\n    };\n    /**\n     * Creates breadcrumbs from history API calls\n     */\n    Breadcrumbs.prototype._historyBreadcrumb = function (handlerData) {\n        var global = getGlobalObject();\n        var from = handlerData.from;\n        var to = handlerData.to;\n        var parsedLoc = parseUrl(global.location.href);\n        var parsedFrom = parseUrl(from);\n        var parsedTo = parseUrl(to);\n        // Initial pushState doesn't provide `from` information\n        if (!parsedFrom.path) {\n            parsedFrom = parsedLoc;\n        }\n        // Use only the path component of the URL if the URL matches the current\n        // document (almost all the time when using pushState)\n        if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n            // tslint:disable-next-line:no-parameter-reassignment\n            to = parsedTo.relative;\n        }\n        if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n            // tslint:disable-next-line:no-parameter-reassignment\n            from = parsedFrom.relative;\n        }\n        getCurrentHub().addBreadcrumb({\n            category: 'navigation',\n            data: {\n                from: from,\n                to: to,\n            },\n        });\n    };\n    /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - Console API\n     *  - DOM API (click/typing)\n     *  - XMLHttpRequest API\n     *  - Fetch API\n     *  - History API\n     */\n    Breadcrumbs.prototype.setupOnce = function () {\n        var _this = this;\n        if (this._options.console) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._consoleBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'console',\n            });\n        }\n        if (this._options.dom) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._domBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'dom',\n            });\n        }\n        if (this._options.xhr) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._xhrBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'xhr',\n            });\n        }\n        if (this._options.fetch) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._fetchBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'fetch',\n            });\n        }\n        if (this._options.history) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._historyBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'history',\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Breadcrumbs.id = 'Breadcrumbs';\n    return Breadcrumbs;\n}());\nexport { Breadcrumbs };\n/**\n * Create a breadcrumb of `sentry` from the events themselves\n */\nfunction addSentryBreadcrumb(serializedData) {\n    // There's always something that can go wrong with deserialization...\n    try {\n        var event_1 = JSON.parse(serializedData);\n        getCurrentHub().addBreadcrumb({\n            category: \"sentry.\" + (event_1.type === 'transaction' ? 'transaction' : 'event'),\n            event_id: event_1.event_id,\n            level: event_1.level || Severity.fromString('error'),\n            message: getEventDescription(event_1),\n        }, {\n            event: event_1,\n        });\n    }\n    catch (_oO) {\n        logger.error('Error while adding sentry type breadcrumb');\n    }\n}\n//# sourceMappingURL=breadcrumbs.js.map","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionMechanism, addInstrumentationHandler, getLocationHref, isErrorEvent, isPrimitive, isString, logger, } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n/** Global handlers */\nvar GlobalHandlers = /** @class */ (function () {\n    /** JSDoc */\n    function GlobalHandlers(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = GlobalHandlers.id;\n        /** JSDoc */\n        this._onErrorHandlerInstalled = false;\n        /** JSDoc */\n        this._onUnhandledRejectionHandlerInstalled = false;\n        this._options = tslib_1.__assign({ onerror: true, onunhandledrejection: true }, options);\n    }\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.prototype.setupOnce = function () {\n        Error.stackTraceLimit = 50;\n        if (this._options.onerror) {\n            logger.log('Global Handler attached: onerror');\n            this._installGlobalOnErrorHandler();\n        }\n        if (this._options.onunhandledrejection) {\n            logger.log('Global Handler attached: onunhandledrejection');\n            this._installGlobalOnUnhandledRejectionHandler();\n        }\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnErrorHandler = function () {\n        var _this = this;\n        if (this._onErrorHandlerInstalled) {\n            return;\n        }\n        addInstrumentationHandler({\n            callback: function (data) {\n                var error = data.error;\n                var currentHub = getCurrentHub();\n                var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n                var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n                if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n                    return;\n                }\n                var client = currentHub.getClient();\n                var event = isPrimitive(error)\n                    ? _this._eventFromIncompleteOnError(data.msg, data.url, data.line, data.column)\n                    : _this._enhanceEventWithInitialFrame(eventFromUnknownInput(error, undefined, {\n                        attachStacktrace: client && client.getOptions().attachStacktrace,\n                        rejection: false,\n                    }), data.url, data.line, data.column);\n                addExceptionMechanism(event, {\n                    handled: false,\n                    type: 'onerror',\n                });\n                currentHub.captureEvent(event, {\n                    originalException: error,\n                });\n            },\n            type: 'error',\n        });\n        this._onErrorHandlerInstalled = true;\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnUnhandledRejectionHandler = function () {\n        var _this = this;\n        if (this._onUnhandledRejectionHandlerInstalled) {\n            return;\n        }\n        addInstrumentationHandler({\n            callback: function (e) {\n                var error = e;\n                // dig the object of the rejection out of known event types\n                try {\n                    // PromiseRejectionEvents store the object of the rejection under 'reason'\n                    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n                    if ('reason' in e) {\n                        error = e.reason;\n                    }\n                    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n                    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n                    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n                    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n                    // https://github.com/getsentry/sentry-javascript/issues/2380\n                    else if ('detail' in e && 'reason' in e.detail) {\n                        error = e.detail.reason;\n                    }\n                }\n                catch (_oO) {\n                    // no-empty\n                }\n                var currentHub = getCurrentHub();\n                var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n                var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n                if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n                    return true;\n                }\n                var client = currentHub.getClient();\n                var event = isPrimitive(error)\n                    ? _this._eventFromIncompleteRejection(error)\n                    : eventFromUnknownInput(error, undefined, {\n                        attachStacktrace: client && client.getOptions().attachStacktrace,\n                        rejection: true,\n                    });\n                event.level = Severity.Error;\n                addExceptionMechanism(event, {\n                    handled: false,\n                    type: 'onunhandledrejection',\n                });\n                currentHub.captureEvent(event, {\n                    originalException: error,\n                });\n                return;\n            },\n            type: 'unhandledrejection',\n        });\n        this._onUnhandledRejectionHandlerInstalled = true;\n    };\n    /**\n     * This function creates a stack from an old, error-less onerror handler.\n     */\n    GlobalHandlers.prototype._eventFromIncompleteOnError = function (msg, url, line, column) {\n        var ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n        // If 'message' is ErrorEvent, get real message from inside\n        var message = isErrorEvent(msg) ? msg.message : msg;\n        var name;\n        if (isString(message)) {\n            var groups = message.match(ERROR_TYPES_RE);\n            if (groups) {\n                name = groups[1];\n                message = groups[2];\n            }\n        }\n        var event = {\n            exception: {\n                values: [\n                    {\n                        type: name || 'Error',\n                        value: message,\n                    },\n                ],\n            },\n        };\n        return this._enhanceEventWithInitialFrame(event, url, line, column);\n    };\n    /**\n     * This function creates an Event from an TraceKitStackTrace that has part of it missing.\n     */\n    GlobalHandlers.prototype._eventFromIncompleteRejection = function (error) {\n        return {\n            exception: {\n                values: [\n                    {\n                        type: 'UnhandledRejection',\n                        value: \"Non-Error promise rejection captured with value: \" + error,\n                    },\n                ],\n            },\n        };\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._enhanceEventWithInitialFrame = function (event, url, line, column) {\n        event.exception = event.exception || {};\n        event.exception.values = event.exception.values || [];\n        event.exception.values[0] = event.exception.values[0] || {};\n        event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n        event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n        var colno = isNaN(parseInt(column, 10)) ? undefined : column;\n        var lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n        var filename = isString(url) && url.length > 0 ? url : getLocationHref();\n        if (event.exception.values[0].stacktrace.frames.length === 0) {\n            event.exception.values[0].stacktrace.frames.push({\n                colno: colno,\n                filename: filename,\n                function: '?',\n                in_app: true,\n                lineno: lineno,\n            });\n        }\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.id = 'GlobalHandlers';\n    return GlobalHandlers;\n}());\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { isInstanceOf } from '@sentry/utils';\nimport { exceptionFromStacktrace } from '../parsers';\nimport { computeStackTrace } from '../tracekit';\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n/** Adds SDK info to an event. */\nvar LinkedErrors = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function LinkedErrors(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = LinkedErrors.id;\n        this._key = options.key || DEFAULT_KEY;\n        this._limit = options.limit || DEFAULT_LIMIT;\n    }\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event, hint) {\n            var self = getCurrentHub().getIntegration(LinkedErrors);\n            if (self) {\n                return self._handler(event, hint);\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._handler = function (event, hint) {\n        if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n            return event;\n        }\n        var linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n        event.exception.values = tslib_1.__spread(linkedErrors, event.exception.values);\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n        if (stack === void 0) { stack = []; }\n        if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n            return stack;\n        }\n        var stacktrace = computeStackTrace(error[key]);\n        var exception = exceptionFromStacktrace(stacktrace);\n        return this._walkErrorTree(error[key], key, tslib_1.__spread([exception], stack));\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.id = 'LinkedErrors';\n    return LinkedErrors;\n}());\nexport { LinkedErrors };\n//# sourceMappingURL=linkederrors.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nvar global = getGlobalObject();\n/** UserAgent */\nvar UserAgent = /** @class */ (function () {\n    function UserAgent() {\n        /**\n         * @inheritDoc\n         */\n        this.name = UserAgent.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    UserAgent.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            if (getCurrentHub().getIntegration(UserAgent)) {\n                if (!global.navigator || !global.location) {\n                    return event;\n                }\n                // Request Interface: https://docs.sentry.io/development/sdk-dev/event-payloads/request/\n                var request = event.request || {};\n                request.url = request.url || global.location.href;\n                request.headers = request.headers || {};\n                request.headers['User-Agent'] = global.navigator.userAgent;\n                return tslib_1.__assign({}, event, { request: request });\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    UserAgent.id = 'UserAgent';\n    return UserAgent;\n}());\nexport { UserAgent };\n//# sourceMappingURL=useragent.js.map","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject, SyncPromise } from '@sentry/utils';\nimport { BrowserClient } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\nexport var defaultIntegrations = [\n    new CoreIntegrations.InboundFilters(),\n    new CoreIntegrations.FunctionToString(),\n    new TryCatch(),\n    new Breadcrumbs(),\n    new GlobalHandlers(),\n    new LinkedErrors(),\n    new UserAgent(),\n];\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options) {\n    if (options === void 0) { options = {}; }\n    if (options.defaultIntegrations === undefined) {\n        options.defaultIntegrations = defaultIntegrations;\n    }\n    if (options.release === undefined) {\n        var window_1 = getGlobalObject();\n        // This supports the variable that sentry-webpack-plugin injects\n        if (window_1.SENTRY_RELEASE && window_1.SENTRY_RELEASE.id) {\n            options.release = window_1.SENTRY_RELEASE.id;\n        }\n    }\n    initAndBind(BrowserClient, options);\n}\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options) {\n    if (options === void 0) { options = {}; }\n    if (!options.eventId) {\n        options.eventId = getCurrentHub().lastEventId();\n    }\n    var client = getCurrentHub().getClient();\n    if (client) {\n        client.showReportDialog(options);\n    }\n}\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId() {\n    return getCurrentHub().lastEventId();\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad() {\n    // Noop\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback) {\n    callback();\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.flush(timeout);\n    }\n    return SyncPromise.reject(false);\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.close(timeout);\n    }\n    return SyncPromise.reject(false);\n}\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\nexport function wrap(fn) {\n    return internalWrap(fn)(); // tslint:disable-line:no-unsafe-any\n}\n//# sourceMappingURL=sdk.js.map","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instanciate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind(clientClass, options) {\n    if (options.debug === true) {\n        logger.enable();\n    }\n    var hub = getCurrentHub();\n    var client = new clientClass(options);\n    hub.bindClient(client);\n}\n//# sourceMappingURL=sdk.js.map","import * as tslib_1 from \"tslib\";\nexport * from './exports';\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nimport * as BrowserIntegrations from './integrations';\nimport * as Transports from './transports';\nvar windowIntegrations = {};\n// This block is needed to add compatibility with the integrations packages when used with a CDN\n// tslint:disable: no-unsafe-any\nvar _window = getGlobalObject();\nif (_window.Sentry && _window.Sentry.Integrations) {\n    windowIntegrations = _window.Sentry.Integrations;\n}\n// tslint:enable: no-unsafe-any\nvar INTEGRATIONS = tslib_1.__assign({}, windowIntegrations, CoreIntegrations, BrowserIntegrations);\nexport { INTEGRATIONS as Integrations, Transports };\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}